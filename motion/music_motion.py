# Choregraphe bezier export in Python.
from naoqi import ALProxy


def guitar(srv):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append(
        [1, 1.52, 1.96, 2.96, 3.4, 3.64, 4.04, 4.36, 4.76, 5.04, 5.56, 6, 6.36, 6.8, 7.08, 8.44, 8.76, 9.28, 9.68, 11.2,
         11.44])
    keys.append([[0.131882, [3, -0.346667, 0], [3, 0.173333, 0]], [-0.00924597, [3, -0.173333, 0], [3, 0.146667, 0]],
                 [0.266875, [3, -0.146667, 0], [3, 0.333333, 0]], [-0.261302, [3, -0.333333, 0], [3, 0.146667, 0]],
                 [0.164096, [3, -0.146667, 0], [3, 0.08, 0]], [-0.201476, [3, -0.08, 0], [3, 0.133333, 0]],
                 [0.208583, [3, -0.133333, 0], [3, 0.106667, 0]],
                 [0.0551821, [3, -0.106667, 0.065855], [3, 0.133333, -0.0823188]],
                 [-0.235939, [3, -0.133333, 0], [3, 0.0933333, 0]],
                 [0.0959881, [3, -0.0933333, -0.0557386], [3, 0.173333, 0.103515]],
                 [0.241821, [3, -0.173333, 0], [3, 0.146667, 0]],
                 [-0.164114, [3, -0.146667, 0.0768709], [3, 0.12, -0.0628943]],
                 [-0.227008, [3, -0.12, 0], [3, 0.146667, 0]],
                 [0.0745118, [3, -0.146667, -0.0839193], [3, 0.0933333, 0.0534032]],
                 [0.18496, [3, -0.0933333, 0], [3, 0.453333, 0]], [-0.276198, [3, -0.453333, 0], [3, 0.106667, 0]],
                 [0.11818, [3, -0.106667, 0], [3, 0.173333, 0]], [-0.113492, [3, -0.173333, 0], [3, 0.133333, 0]],
                 [0.150393, [3, -0.133333, 0], [3, 0.506667, 0]],
                 [-0.191997, [3, -0.506667, 0.0235667], [3, 0.08, -0.00372105]], [-0.195718, [3, -0.08, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([1, 1.52, 2.64, 2.96, 3.64, 4.36, 4.76, 5.04, 5.56, 6, 6.36, 6.8, 7.48, 8.76, 9.68, 10.6, 11.2, 11.44])
    keys.append([[0.256136, [3, -0.346667, 0], [3, 0.173333, 0]],
                 [0.237728, [3, -0.173333, 0.0132946], [3, 0.373333, -0.0286346]],
                 [0.130348, [3, -0.373333, 0.0588601], [3, 0.106667, -0.0168172]],
                 [0.010696, [3, -0.106667, 0], [3, 0.226667, 0]],
                 [0.033706, [3, -0.226667, -0.0230099], [3, 0.24, 0.0243635]],
                 [0.309826, [3, -0.24, 0], [3, 0.133333, 0]], [0.300622, [3, -0.133333, 0], [3, 0.0933333, 0]],
                 [0.374254, [3, -0.0933333, 0], [3, 0.173333, 0]],
                 [0.355168, [3, -0.173333, 0.0190869], [3, 0.146667, -0.0161505]],
                 [0.230059, [3, -0.146667, 0.00375014], [3, 0.12, -0.00306829]],
                 [0.226991, [3, -0.12, 0], [3, 0.146667, 0]], [0.266875, [3, -0.146667, 0], [3, 0.226667, 0]],
                 [0.260738, [3, -0.226667, 0.00613657], [3, 0.426667, -0.0115512]],
                 [-0.114583, [3, -0.426667, 0], [3, 0.306667, 0]],
                 [-0.00310997, [3, -0.306667, -0.0515597], [3, 0.306667, 0.0515597]],
                 [0.194775, [3, -0.306667, 0], [3, 0.2, 0]],
                 [0.00367193, [3, -0.2, 0.00203763], [3, 0.08, -0.000815051]], [0.00285688, [3, -0.08, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.44, 1.4, 1.84, 4.64, 5.12, 5.88, 6.68, 7.36, 7.88, 8.64, 9.2, 9.72, 10, 10.68, 11.2, 11.44])
    keys.append([[-0.0345315, [3, -0.16, 0], [3, 0.32, 0]], [-0.420132, [3, -0.32, 0], [3, 0.146667, 0]],
                 [-0.303466, [3, -0.146667, -0.000894385], [3, 0.933333, 0.00569154]],
                 [-0.297774, [3, -0.933333, -0.00569154], [3, 0.16, 0.000975693]],
                 [-0.113605, [3, -0.16, 0], [3, 0.253333, 0]], [-0.113605, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.299659, [3, -0.266667, 0], [3, 0.226667, 0]], [-0.299659, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [-0.106529, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.300212, [3, -0.253333, 0], [3, 0.186667, 0]],
                 [-0.290081, [3, -0.186667, 0], [3, 0.173333, 0]], [-0.392792, [3, -0.173333, 0], [3, 0.0933333, 0]],
                 [-0.381951, [3, -0.0933333, -0.0074534], [3, 0.226667, 0.0181011]],
                 [-0.316128, [3, -0.226667, -0.0614779], [3, 0.173333, 0.0470125]],
                 [-0.0564802, [3, -0.173333, -0.0186056], [3, 0.08, 0.00858719]],
                 [-0.0478931, [3, -0.08, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.44, 1.4, 1.84, 2.52, 3.52, 5.12, 5.88, 6.68, 7.36, 7.88, 8.64, 9.2, 10.68, 11.2, 11.44])
    keys.append(
        [[-0.00756674, [3, -0.16, 0], [3, 0.32, 0]], [-0.0397963, [3, -0.32, 0.0306416], [3, 0.146667, -0.014044]],
         [-0.141624, [3, -0.146667, 0], [3, 0.226667, 0]], [-0.0683288, [3, -0.226667, 0], [3, 0.333333, 0]],
         [-0.169608, [3, -0.333333, 0], [3, 0.533333, 0]],
         [-0.130309, [3, -0.533333, -0.0376366], [3, 0.253333, 0.0178774]],
         [-0.0030663, [3, -0.253333, -0.0311903], [3, 0.266667, 0.0328319]],
         [0.0617571, [3, -0.266667, 0], [3, 0.226667, 0]], [0.0617571, [3, -0.226667, 0], [3, 0.173333, 0]],
         [0.00469729, [3, -0.173333, 0], [3, 0.253333, 0]], [0.0593222, [3, -0.253333, 0], [3, 0.186667, 0]],
         [0.0593222, [3, -0.186667, 0], [3, 0.493333, 0]], [-0.0465732, [3, -0.493333, 0], [3, 0.173333, 0]],
         [-0.00631818, [3, -0.173333, -0.00863161], [3, 0.08, 0.00398382]], [-0.00233436, [3, -0.08, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.44, 1.4, 1.84, 4.64, 5.12, 5.88, 6.68, 7.36, 7.88, 8.64, 9.2, 9.72, 10, 10.68, 11.2, 11.44])
    keys.append([[-0.0100048, [3, -0.16, 0], [3, 0.32, 0]], [0.239108, [3, -0.32, 0], [3, 0.146667, 0]],
                 [0.160687, [3, -0.146667, 0], [3, 0.933333, 0]], [0.160687, [3, -0.933333, 0], [3, 0.16, 0]],
                 [0.0332099, [3, -0.16, 0], [3, 0.253333, 0]], [0.0332099, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [0.171806, [3, -0.266667, 0], [3, 0.226667, 0]], [0.171806, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [0.0334066, [3, -0.173333, 0], [3, 0.253333, 0]], [0.17901, [3, -0.253333, 0], [3, 0.186667, 0]],
                 [0.17901, [3, -0.186667, 0], [3, 0.173333, 0]], [0.290864, [3, -0.173333, 0], [3, 0.0933333, 0]],
                 [0.280766, [3, -0.0933333, 0.0100985], [3, 0.226667, -0.0245249]],
                 [0.15779, [3, -0.226667, 0.0536043], [3, 0.173333, -0.0409915]],
                 [-0.00302174, [3, -0.173333, 0.0183761], [3, 0.08, -0.00848127]],
                 [-0.011503, [3, -0.08, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append(
        [0.44, 0.88, 1.4, 1.84, 2.52, 3.28, 3.52, 3.92, 4.24, 4.64, 4.92, 5.44, 5.88, 6.24, 6.68, 6.96, 7.36, 7.88,
         8.32, 8.64, 9.16, 9.56, 9.88, 10.48, 10.92, 11.2, 11.44])
    keys.append([[-0.645772, [3, -0.16, 0], [3, 0.146667, 0]], [-1.0218, [3, -0.146667, 0], [3, 0.173333, 0]],
                 [-1.0126, [3, -0.173333, 0], [3, 0.146667, 0]],
                 [-1.07396, [3, -0.146667, 0.0347522], [3, 0.226667, -0.053708]],
                 [-1.27798, [3, -0.226667, 0], [3, 0.253333, 0]], [-1.166, [3, -0.253333, 0], [3, 0.08, 0]],
                 [-1.16753, [3, -0.08, 0], [3, 0.133333, 0]],
                 [-1.1614, [3, -0.133333, -0.00255659], [3, 0.106667, 0.00204527]],
                 [-1.15373, [3, -0.106667, -0.0076707], [3, 0.133333, 0.00958838]],
                 [-1.05402, [3, -0.133333, 0], [3, 0.0933333, 0]],
                 [-1.22429, [3, -0.0933333, 0.0261291], [3, 0.173333, -0.0485256]],
                 [-1.27798, [3, -0.173333, 0], [3, 0.146667, 0]],
                 [-1.25957, [3, -0.146667, -0.0177178], [3, 0.12, 0.0144964]],
                 [-1.18134, [3, -0.12, 0], [3, 0.146667, 0]], [-1.27951, [3, -0.146667, 0], [3, 0.0933333, 0]],
                 [-1.21969, [3, -0.0933333, 0], [3, 0.133333, 0]], [-1.22429, [3, -0.133333, 0], [3, 0.173333, 0]],
                 [-1.10311, [3, -0.173333, 0], [3, 0.146667, 0]],
                 [-1.12918, [3, -0.146667, 0.00421881], [3, 0.106667, -0.00306823]],
                 [-1.13225, [3, -0.106667, 0], [3, 0.173333, 0]],
                 [-1.06936, [3, -0.173333, -0.0141617], [3, 0.133333, 0.0108936]],
                 [-1.05708, [3, -0.133333, -0.00710187], [3, 0.106667, 0.0056815]],
                 [-1.03101, [3, -0.106667, 0], [3, 0.2, 0]], [-1.18001, [3, -0.2, 0], [3, 0.146667, 0]],
                 [-0.916298, [3, -0.146667, -0.121172], [3, 0.0933333, 0.0771095]],
                 [-0.585162, [3, -0.0933333, -0.0706232], [3, 0.08, 0.0605342]], [-0.522826, [3, -0.08, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append(
        [0.44, 0.88, 1.4, 1.84, 2.52, 3.28, 3.52, 3.92, 4.24, 4.64, 4.92, 5.44, 5.88, 6.24, 6.68, 6.96, 7.36, 7.88,
         8.32, 8.64, 9.16, 9.56, 9.88, 10.48, 10.92, 11.2, 11.44])
    keys.append([[-1.58825, [3, -0.16, 0], [3, 0.146667, 0]], [-2.0372, [3, -0.146667, 0], [3, 0.173333, 0]],
                 [-1.91986, [3, -0.173333, 0], [3, 0.146667, 0]], [-1.94822, [3, -0.146667, 0], [3, 0.226667, 0]],
                 [-1.61381, [3, -0.226667, 0], [3, 0.253333, 0]],
                 [-1.79636, [3, -0.253333, 0.0509069], [3, 0.08, -0.0160759]],
                 [-1.81476, [3, -0.08, 0], [3, 0.133333, 0]], [-1.60307, [3, -0.133333, 0], [3, 0.106667, 0]],
                 [-1.63529, [3, -0.106667, 0.0270428], [3, 0.133333, -0.0338035]],
                 [-1.78561, [3, -0.133333, 0], [3, 0.0933333, 0]],
                 [-1.63835, [3, -0.0933333, -0.010738], [3, 0.173333, 0.019942]],
                 [-1.61841, [3, -0.173333, -0.019942], [3, 0.146667, 0.016874]],
                 [-1.52791, [3, -0.146667, 0], [3, 0.12, 0]], [-1.57239, [3, -0.12, 0], [3, 0.146667, 0]],
                 [-1.33002, [3, -0.146667, 0], [3, 0.0933333, 0]], [-1.38524, [3, -0.0933333, 0], [3, 0.133333, 0]],
                 [-1.23645, [3, -0.133333, 0], [3, 0.173333, 0]],
                 [-1.37757, [3, -0.173333, 0.0465313], [3, 0.146667, -0.0393726]],
                 [-1.49416, [3, -0.146667, 0.0253109], [3, 0.106667, -0.0184079]],
                 [-1.51257, [3, -0.106667, 0], [3, 0.173333, 0]], [-1.34076, [3, -0.173333, 0], [3, 0.133333, 0]],
                 [-1.47422, [3, -0.133333, 0.017257], [3, 0.106667, -0.0138056]],
                 [-1.48802, [3, -0.106667, 0], [3, 0.2, 0]],
                 [-1.14594, [3, -0.2, -0.0874591], [3, 0.146667, 0.0641367]],
                 [-1.03323, [3, -0.146667, 0], [3, 0.0933333, 0]],
                 [-1.19712, [3, -0.0933333, 0.0361588], [3, 0.08, -0.0309933]], [-1.23469, [3, -0.08, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append(
        [0.44, 0.88, 1.4, 1.84, 3.52, 3.92, 4.24, 4.92, 5.44, 5.88, 6.24, 6.68, 6.96, 7.88, 8.32, 8.64, 9.16, 9.56,
         10.48, 11.2, 11.44])
    keys.append(
        [[0.636364, [3, -0.16, 0], [3, 0.146667, 0]], [0.345455, [3, -0.146667, 0.0583335], [3, 0.173333, -0.0689395]],
         [0.254545, [3, -0.173333, 0], [3, 0.146667, 0]], [0.381818, [3, -0.146667, 0], [3, 0.56, 0]],
         [0.366571, [3, -0.56, 0.015247], [3, 0.133333, -0.00363024]], [0.0909091, [3, -0.133333, 0], [3, 0.106667, 0]],
         [0.127273, [3, -0.106667, -0.0135758], [3, 0.226667, 0.0288485]],
         [0.218182, [3, -0.226667, -0.0408047], [3, 0.173333, 0.0312036]],
         [0.343298, [3, -0.173333, 0], [3, 0.146667, 0]], [0.254545, [3, -0.146667, 0], [3, 0.12, 0]],
         [0.332753, [3, -0.12, 0], [3, 0.146667, 0]], [0.127273, [3, -0.146667, 0], [3, 0.0933333, 0]],
         [0.127273, [3, -0.0933333, 0], [3, 0.306667, 0]], [0.254545, [3, -0.306667, 0], [3, 0.146667, 0]],
         [0.127273, [3, -0.146667, 0.0315789], [3, 0.106667, -0.0229664]],
         [0.0909091, [3, -0.106667, 0], [3, 0.173333, 0]], [0.176364, [3, -0.173333, 0], [3, 0.133333, 0]],
         [0.0909091, [3, -0.133333, 0], [3, 0.306667, 0]], [0.145455, [3, -0.306667, -0.0545459], [3, 0.24, 0.0426881]],
         [0.589875, [3, -0.24, -0.024264], [3, 0.08, 0.00808799]], [0.597963, [3, -0.08, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append(
        [0.88, 1.4, 1.84, 2.52, 3.28, 3.52, 3.92, 4.24, 4.64, 4.92, 5.44, 5.88, 6.24, 6.68, 6.96, 7.36, 7.88, 8.32,
         8.64, 9.16, 9.56, 9.88, 10.48, 11.2, 11.44])
    keys.append([[0.559055, [3, -0.306667, 0], [3, 0.173333, 0]],
                 [0.513036, [3, -0.173333, 0.0252043], [3, 0.146667, -0.0213267]],
                 [0.419462, [3, -0.146667, 0], [3, 0.226667, 0]],
                 [0.485423, [3, -0.226667, -0.0130389], [3, 0.253333, 0.0145728]],
                 [0.502297, [3, -0.253333, 0], [3, 0.08, 0]],
                 [0.477752, [3, -0.08, 0.00690299], [3, 0.133333, -0.011505]],
                 [0.447073, [3, -0.133333, 0.00766975], [3, 0.106667, -0.0061358]],
                 [0.436336, [3, -0.106667, 0], [3, 0.133333, 0]],
                 [0.563658, [3, -0.133333, -0.0284888], [3, 0.0933333, 0.0199422]],
                 [0.5836, [3, -0.0933333, -0.00501113], [3, 0.173333, 0.00930638]],
                 [0.60661, [3, -0.173333, -0.00913999], [3, 0.146667, 0.00773384]],
                 [0.634221, [3, -0.146667, -0.0123742], [3, 0.12, 0.0101243]],
                 [0.674106, [3, -0.12, 0], [3, 0.146667, 0]],
                 [0.644958, [3, -0.146667, 0.00687453], [3, 0.0933333, -0.0043747]],
                 [0.640358, [3, -0.0933333, 0], [3, 0.133333, 0]], [0.655697, [3, -0.133333, 0], [3, 0.173333, 0]],
                 [0.557521, [3, -0.173333, 0], [3, 0.146667, 0]], [0.614279, [3, -0.146667, 0], [3, 0.106667, 0]],
                 [0.591269, [3, -0.106667, 0.0148044], [3, 0.173333, -0.0240571]],
                 [0.497695, [3, -0.173333, 0], [3, 0.133333, 0]], [0.534511, [3, -0.133333, 0], [3, 0.106667, 0]],
                 [0.522239, [3, -0.106667, 0.0122714], [3, 0.2, -0.0230089]], [0.356693, [3, -0.2, 0], [3, 0.24, 0]],
                 [1.51843, [3, -0.24, -0.10661], [3, 0.08, 0.0355366]], [1.55397, [3, -0.08, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append(
        [0.88, 1.4, 1.84, 2.52, 3.28, 3.52, 3.92, 4.24, 4.64, 4.92, 5.44, 5.88, 6.24, 6.68, 6.96, 7.36, 7.88, 8.32,
         8.64, 9.16, 9.56, 9.88, 10.48, 11.2, 11.44])
    keys.append([[0.519984, [3, -0.306667, 0], [3, 0.173333, 0]],
                 [0.513848, [3, -0.173333, 0.00613659], [3, 0.146667, -0.0051925]],
                 [0.483168, [3, -0.146667, 0.00682991], [3, 0.226667, -0.0105553]],
                 [0.461692, [3, -0.226667, 0], [3, 0.253333, 0]],
                 [0.845191, [3, -0.253333, -0.111532], [3, 0.08, 0.0352206]],
                 [0.901949, [3, -0.08, 0], [3, 0.133333, 0]], [0.564471, [3, -0.133333, 0], [3, 0.106667, 0]],
                 [0.567537, [3, -0.106667, -0.00306656], [3, 0.133333, 0.0038332]],
                 [1.02927, [3, -0.133333, 0], [3, 0.0933333, 0]], [0.97865, [3, -0.0933333, 0], [3, 0.173333, 0]],
                 [0.984786, [3, -0.173333, 0], [3, 0.146667, 0]], [0.760822, [3, -0.146667, 0], [3, 0.12, 0]],
                 [0.897349, [3, -0.12, 0], [3, 0.146667, 0]], [0.826783, [3, -0.146667, 0], [3, 0.0933333, 0]],
                 [0.828318, [3, -0.0933333, 0], [3, 0.133333, 0]], [0.638103, [3, -0.133333, 0], [3, 0.173333, 0]],
                 [0.639635, [3, -0.173333, -0.00153238], [3, 0.146667, 0.00129663]],
                 [0.891212, [3, -0.146667, 0], [3, 0.106667, 0]],
                 [0.803775, [3, -0.106667, 0.0629183], [3, 0.173333, -0.102242]],
                 [0.395731, [3, -0.173333, 0], [3, 0.133333, 0]],
                 [0.44175, [3, -0.133333, -0.0110786], [3, 0.106667, 0.00886291]],
                 [0.455555, [3, -0.106667, -0.0138056], [3, 0.2, 0.0258854]], [0.691793, [3, -0.2, 0], [3, 0.24, 0]],
                 [0.16004, [3, -0.24, 0.0344653], [3, 0.08, -0.0114884]], [0.148552, [3, -0.08, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append(
        [0.44, 0.88, 1.4, 1.84, 2.52, 3.28, 3.52, 4.24, 4.64, 4.92, 5.44, 6.24, 6.96, 7.88, 8.64, 9.56, 10.48, 11.2,
         11.44])
    keys.append(
        [[-1.25664, [3, -0.16, 0], [3, 0.146667, 0]], [-1.39626, [3, -0.146667, 0.0399971], [3, 0.173333, -0.0472693]],
         [-1.51844, [3, -0.173333, 0], [3, 0.146667, 0]], [-1.44862, [3, -0.146667, 0], [3, 0.226667, 0]],
         [-1.50098, [3, -0.226667, 0.0467037], [3, 0.253333, -0.0521983]],
         [-1.74533, [3, -0.253333, 0.079587], [3, 0.08, -0.0251327]], [-1.81514, [3, -0.08, 0], [3, 0.24, 0]],
         [-1.42206, [3, -0.24, 0], [3, 0.133333, 0]],
         [-1.81514, [3, -0.133333, 0.00164564], [3, 0.0933333, -0.00115195]],
         [-1.81629, [3, -0.0933333, 0.00100997], [3, 0.173333, -0.00187566]],
         [-1.8238, [3, -0.173333, 0], [3, 0.266667, 0]], [-1.8238, [3, -0.266667, 0], [3, 0.24, 0]],
         [-1.75495, [3, -0.24, -0.0152406], [3, 0.306667, 0.0194741]], [-1.71966, [3, -0.306667, 0], [3, 0.253333, 0]],
         [-1.81937, [3, -0.253333, 0], [3, 0.306667, 0]], [-1.53711, [3, -0.306667, 0], [3, 0.306667, 0]],
         [-1.71042, [3, -0.306667, 0], [3, 0.24, 0]], [-0.0545468, [3, -0.24, -0.14642], [3, 0.08, 0.0488068]],
         [-0.00573997, [3, -0.08, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append(
        [0.92, 1.44, 1.88, 2.16, 2.56, 2.88, 3.32, 3.56, 3.96, 4.28, 4.68, 4.96, 5.48, 5.92, 6.28, 6.52, 6.72, 7, 7.4,
         7.92, 8.36, 8.68, 8.96, 9.2, 9.6, 9.92, 10.52, 10.96, 11.2, 11.44])
    keys.append([[1.25133, [3, -0.32, 0], [3, 0.173333, 0]], [1.32036, [3, -0.173333, 0], [3, 0.146667, 0]],
                 [0.935331, [3, -0.146667, 0], [3, 0.0933333, 0]], [1.18691, [3, -0.0933333, 0], [3, 0.133333, 0]],
                 [1.03504, [3, -0.133333, 0.0556786], [3, 0.106667, -0.0445429]],
                 [0.886243, [3, -0.106667, 0.0409066], [3, 0.146667, -0.0562466]],
                 [0.743582, [3, -0.146667, 0], [3, 0.08, 0]], [0.743582, [3, -0.08, 0], [3, 0.133333, 0]],
                 [1.0872, [3, -0.133333, 0], [3, 0.106667, 0]], [0.949136, [3, -0.106667, 0], [3, 0.133333, 0]],
                 [1.19918, [3, -0.133333, 0], [3, 0.0933333, 0]],
                 [0.854646, [3, -0.0933333, 0.0630079], [3, 0.173333, -0.117015]],
                 [0.659111, [3, -0.173333, 0], [3, 0.146667, 0]], [1.2544, [3, -0.146667, 0], [3, 0.12, 0]],
                 [0.918457, [3, -0.12, 0], [3, 0.08, 0]], [1.33401, [3, -0.08, 0], [3, 0.0666667, 0]],
                 [0.972147, [3, -0.0666667, 0], [3, 0.0933333, 0]], [1.27128, [3, -0.0933333, 0], [3, 0.133333, 0]],
                 [0.826417, [3, -0.133333, 0.0918177], [3, 0.173333, -0.119363]],
                 [0.637735, [3, -0.173333, 0], [3, 0.146667, 0]], [1.27281, [3, -0.146667, 0], [3, 0.106667, 0]],
                 [0.941467, [3, -0.106667, 0], [3, 0.0933333, 0]], [1.2452, [3, -0.0933333, 0], [3, 0.08, 0]],
                 [0.832554, [3, -0.08, 0], [3, 0.133333, 0]], [1.27588, [3, -0.133333, 0], [3, 0.106667, 0]],
                 [0.900157, [3, -0.106667, 0.0837574], [3, 0.2, -0.157045]], [0.553472, [3, -0.2, 0], [3, 0.146667, 0]],
                 [0.778417, [3, -0.146667, 0], [3, 0.08, 0]], [0.588633, [3, -0.08, 0.0425334], [3, 0.08, -0.0425334]],
                 [0.523217, [3, -0.08, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append(
        [0.92, 1.44, 1.88, 2.16, 2.56, 2.88, 3.32, 3.56, 3.96, 4.28, 4.68, 4.96, 5.48, 5.92, 6.28, 6.52, 6.72, 7, 7.4,
         7.92, 8.36, 8.68, 8.96, 9.2, 9.6, 9.92, 10.52, 10.96, 11.2, 11.44])
    keys.append([[0.566906, [3, -0.32, 0], [3, 0.173333, 0]], [0.720306, [3, -0.173333, 0], [3, 0.146667, 0]],
                 [0.122678, [3, -0.146667, 0], [3, 0.0933333, 0]], [0.477032, [3, -0.0933333, 0], [3, 0.133333, 0]],
                 [0.418739, [3, -0.133333, 0.0582922], [3, 0.106667, -0.0466338]],
                 [0.0996681, [3, -0.106667, 0.0673883], [3, 0.146667, -0.0926589]],
                 [-0.0614019, [3, -0.146667, 0.00562488], [3, 0.08, -0.00306812]],
                 [-0.06447, [3, -0.08, 0], [3, 0.133333, 0]], [0.449421, [3, -0.133333, 0], [3, 0.106667, 0]],
                 [0.0199001, [3, -0.106667, 0], [3, 0.133333, 0]], [0.649924, [3, -0.133333, 0], [3, 0.0933333, 0]],
                 [0.00609404, [3, -0.0933333, 0], [3, 0.173333, 0]],
                 [0.138018, [3, -0.173333, -0.112174], [3, 0.146667, 0.0949162]],
                 [0.627364, [3, -0.146667, 0], [3, 0.12, 0]], [0.154892, [3, -0.12, 0], [3, 0.08, 0]],
                 [0.71787, [3, -0.08, 0], [3, 0.0666667, 0]], [0.153358, [3, -0.0666667, 0], [3, 0.0933333, 0]],
                 [0.58748, [3, -0.0933333, 0], [3, 0.133333, 0]],
                 [0.236194, [3, -0.133333, 0.00236023], [3, 0.173333, -0.00306829]],
                 [0.233125, [3, -0.173333, 0], [3, 0.146667, 0]], [0.613558, [3, -0.146667, 0], [3, 0.106667, 0]],
                 [0.249999, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.694859, [3, -0.0933333, 0], [3, 0.08, 0]],
                 [-0.013848, [3, -0.08, 0], [3, 0.133333, 0]], [0.46476, [3, -0.133333, 0], [3, 0.106667, 0]],
                 [0.0827941, [3, -0.106667, 0], [3, 0.2, 0]], [0.24233, [3, -0.2, -0.159536], [3, 0.146667, 0.116993]],
                 [1.18857, [3, -0.146667, -0.0496444], [3, 0.08, 0.0270788]],
                 [1.21565, [3, -0.08, -0.00543205], [3, 0.08, 0.00543205]], [1.22116, [3, -0.08, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append(
        [0.92, 1.44, 1.88, 2.16, 2.56, 3.32, 3.56, 3.96, 4.28, 4.68, 4.96, 5.48, 6.28, 6.52, 6.72, 7, 7.4, 7.92, 8.36,
         8.68, 8.96, 9.2, 9.6, 9.92, 10.52, 11.2, 11.44])
    keys.append([[0.454545, [3, -0.32, 0], [3, 0.173333, 0]], [0.45348, [3, -0.173333, 0], [3, 0.146667, 0]],
                 [0.672727, [3, -0.146667, 0], [3, 0.0933333, 0]], [0.287273, [3, -0.0933333, 0], [3, 0.133333, 0]],
                 [0.381818, [3, -0.133333, -0.0463949], [3, 0.253333, 0.0881504]],
                 [0.690909, [3, -0.253333, 0], [3, 0.08, 0]],
                 [0.654545, [3, -0.08, 0.036364], [3, 0.133333, -0.0606067]],
                 [0.305455, [3, -0.133333, 0], [3, 0.106667, 0]], [0.418182, [3, -0.106667, 0], [3, 0.133333, 0]],
                 [0.345455, [3, -0.133333, 0], [3, 0.0933333, 0]],
                 [0.654545, [3, -0.0933333, -0.0470909], [3, 0.173333, 0.0874545]],
                 [0.749091, [3, -0.173333, 0], [3, 0.266667, 0]],
                 [0.469091, [3, -0.266667, 0.108158], [3, 0.08, -0.0324475]],
                 [0.327273, [3, -0.08, 0], [3, 0.0666667, 0]], [0.436364, [3, -0.0666667, 0], [3, 0.0933333, 0]],
                 [0.318182, [3, -0.0933333, 0], [3, 0.133333, 0]],
                 [0.545455, [3, -0.133333, -0.0592886], [3, 0.173333, 0.0770751]],
                 [0.727273, [3, -0.173333, 0], [3, 0.146667, 0]], [0.436364, [3, -0.146667, 0], [3, 0.106667, 0]],
                 [0.729115, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.490909, [3, -0.0933333, 0], [3, 0.08, 0]],
                 [0.618182, [3, -0.08, 0], [3, 0.133333, 0]], [0.490909, [3, -0.133333, 0], [3, 0.106667, 0]],
                 [0.745455, [3, -0.106667, 0], [3, 0.2, 0]],
                 [0.662205, [3, -0.2, 0.0206747], [3, 0.226667, -0.0234313]],
                 [0.613137, [3, -0.226667, 0.0134945], [3, 0.08, -0.00476278]], [0.607433, [3, -0.08, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append(
        [0.92, 1.44, 1.88, 2.16, 2.56, 2.88, 3.32, 3.56, 3.96, 4.28, 4.68, 4.96, 5.48, 5.92, 6.28, 6.52, 6.72, 7, 7.4,
         7.92, 8.36, 8.68, 8.96, 9.2, 9.6, 9.92, 10.52, 11.2, 11.44])
    keys.append(
        [[0.439849, [3, -0.32, 0], [3, 0.173333, 0]], [0.44752, [3, -0.173333, -0.00767074], [3, 0.146667, 0.00649062]],
         [0.556434, [3, -0.146667, 0], [3, 0.0933333, 0]],
         [0.464394, [3, -0.0933333, 0.00322169], [3, 0.133333, -0.00460241]],
         [0.459791, [3, -0.133333, 0], [3, 0.106667, 0]],
         [0.527287, [3, -0.106667, -0.0152861], [3, 0.146667, 0.0210184]],
         [0.568705, [3, -0.146667, -0.0119111], [3, 0.08, 0.00649694]], [0.582511, [3, -0.08, 0], [3, 0.133333, 0]],
         [0.398431, [3, -0.133333, 0], [3, 0.106667, 0]], [0.479733, [3, -0.106667, 0], [3, 0.133333, 0]],
         [0.214351, [3, -0.133333, 0], [3, 0.0933333, 0]],
         [0.714435, [3, -0.0933333, -0.0735143], [3, 0.173333, 0.136527]],
         [0.850961, [3, -0.173333, 0], [3, 0.146667, 0]], [0.735911, [3, -0.146667, 0], [3, 0.12, 0]],
         [0.77733, [3, -0.12, 0], [3, 0.08, 0]], [0.610123, [3, -0.08, 0], [3, 0.0666667, 0]],
         [0.668416, [3, -0.0666667, 0], [3, 0.0933333, 0]], [0.617792, [3, -0.0933333, 0], [3, 0.133333, 0]],
         [0.896981, [3, -0.133333, -0.0546905], [3, 0.173333, 0.0710977]],
         [0.995157, [3, -0.173333, 0], [3, 0.146667, 0]], [0.557968, [3, -0.146667, 0], [3, 0.106667, 0]],
         [0.683755, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.353946, [3, -0.0933333, 0], [3, 0.08, 0]],
         [0.591716, [3, -0.08, 0], [3, 0.133333, 0]], [0.46286, [3, -0.133333, 0], [3, 0.106667, 0]],
         [0.622395, [3, -0.106667, -0.0618935], [3, 0.2, 0.11605]],
         [0.996691, [3, -0.2, -0.14435], [3, 0.226667, 0.163597]],
         [1.54623, [3, -0.226667, -0.0285579], [3, 0.08, 0.0100793]], [1.55631, [3, -0.08, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append(
        [0.92, 1.44, 1.88, 2.16, 2.56, 2.88, 3.32, 3.56, 3.96, 4.28, 4.68, 4.96, 5.48, 5.92, 6.28, 6.52, 6.72, 7, 7.4,
         7.92, 8.36, 8.68, 8.96, 9.2, 9.6, 9.92, 10.52, 11.2, 11.44])
    keys.append(
        [[-0.55147, [3, -0.32, 0], [3, 0.173333, 0]], [-0.476306, [3, -0.173333, -0.0291636], [3, 0.146667, 0.0246769]],
         [-0.389948, [3, -0.146667, -0.0219657], [3, 0.0933333, 0.0139782]],
         [-0.368474, [3, -0.0933333, -0.00694805], [3, 0.133333, 0.00992579]],
         [-0.339327, [3, -0.133333, 0], [3, 0.106667, 0]], [-0.373075, [3, -0.106667, 0], [3, 0.146667, 0]],
         [-0.373075, [3, -0.146667, 0], [3, 0.08, 0]], [-0.376143, [3, -0.08, 0], [3, 0.133333, 0]],
         [-0.271832, [3, -0.133333, 0], [3, 0.106667, 0]], [-0.316316, [3, -0.106667, 0], [3, 0.133333, 0]],
         [-0.273366, [3, -0.133333, 0], [3, 0.0933333, 0]],
         [-0.540281, [3, -0.0933333, 0.0107381], [3, 0.173333, -0.0199421]],
         [-0.560223, [3, -0.173333, 0], [3, 0.146667, 0]],
         [-0.497328, [3, -0.146667, -0.00374802], [3, 0.12, 0.00306656]],
         [-0.494262, [3, -0.12, -0.00306656], [3, 0.08, 0.00204438]],
         [-0.471251, [3, -0.08, -0.00753062], [3, 0.0666667, 0.00627552]],
         [-0.452843, [3, -0.0666667, -0.00788307], [3, 0.0933333, 0.0110363]],
         [-0.414493, [3, -0.0933333, 0], [3, 0.133333, 0]],
         [-0.445172, [3, -0.133333, 0.00555799], [3, 0.173333, -0.00722538]],
         [-0.452843, [3, -0.173333, 0.00387766], [3, 0.146667, -0.0032811]],
         [-0.466649, [3, -0.146667, 0.0138056], [3, 0.106667, -0.0100404]],
         [-0.561757, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.465115, [3, -0.0933333, 0], [3, 0.08, 0]],
         [-0.492727, [3, -0.08, 0], [3, 0.133333, 0]],
         [-0.465115, [3, -0.133333, -0.0235781], [3, 0.106667, 0.0188625]], [-0.365406, [3, -0.106667, 0], [3, 0.2, 0]],
         [-0.770381, [3, -0.2, 0], [3, 0.226667, 0]], [-0.174506, [3, -0.226667, -0.0615635], [3, 0.08, 0.0217283]],
         [-0.152778, [3, -0.08, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append(
        [0.92, 1.44, 2.16, 2.56, 3.56, 3.96, 4.96, 5.48, 6.28, 6.72, 7.4, 8.36, 8.68, 8.96, 9.2, 9.6, 9.92, 10.52, 11.2,
         11.44])
    keys.append(
        [[1.01229, [3, -0.32, 0], [3, 0.173333, 0]], [1.00626, [3, -0.173333, 0.00320138], [3, 0.24, -0.00443268]],
         [0.989389, [3, -0.24, 0.00276152], [3, 0.133333, -0.00153418]],
         [0.987855, [3, -0.133333, 0], [3, 0.333333, 0]],
         [1.00473, [3, -0.333333, -0.00840043], [3, 0.133333, 0.00336017]],
         [1.02314, [3, -0.133333, -0.00292185], [3, 0.333333, 0.00730462]],
         [1.03541, [3, -0.333333, 0], [3, 0.173333, 0]], [1.0216, [3, -0.173333, 0], [3, 0.266667, 0]],
         [1.02927, [3, -0.266667, 0], [3, 0.146667, 0]],
         [1.02314, [3, -0.146667, 0.00381664], [3, 0.226667, -0.00589844]], [1.00013, [3, -0.226667, 0], [3, 0.32, 0]],
         [1.18682, [3, -0.32, 0], [3, 0.106667, 0]], [0.820305, [3, -0.106667, 0], [3, 0.0933333, 0]],
         [1.09956, [3, -0.0933333, 0], [3, 0.08, 0]], [0.925025, [3, -0.08, 0], [3, 0.133333, 0]],
         [1.02974, [3, -0.133333, 0], [3, 0.106667, 0]], [0.855211, [3, -0.106667, 0.0303536], [3, 0.2, -0.0569129]],
         [0.767945, [3, -0.2, 0.0872665], [3, 0.226667, -0.098902]],
         [0.0171047, [3, -0.226667, 0.045458], [3, 0.08, -0.016044]], [0.00106072, [3, -0.08, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        # motion = ALProxy("ALMotion", IP, 9559)
        motion = srv["motion"]
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


def saxophone(srv):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[-0.303464, [3, -0.506667, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.08, 0]], [-0.0301958, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.303464, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.0301958, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [-0.201446, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[-0.186771, [3, -0.506667, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.08, 0]], [-0.186771, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.186771, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.186771, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [-0.00274275, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[0.0712065, [3, -0.506667, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.08, 0]], [0.262773, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0712065, [3, -0.08, 0], [3, 0.0933333, 0]], [0.262773, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [-0.0378236, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.64, 5.32, 5.8, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96,
         8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[0.0859543, [3, -0.506667, 0], [3, 0.08, 0]], [0.0859543, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0859543, [3, -0.08, 0], [3, 0.08, 0]], [0.0859543, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0859543, [3, -0.08, 0], [3, 0.08, 0]], [0.0859543, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0859543, [3, -0.08, 0], [3, 0.08, 0]], [0.0859543, [3, -0.08, 0], [3, 0.16, 0]],
                 [-0.0872665, [3, -0.16, 0], [3, 0.56, 0]], [-0.0738023, [3, -0.56, -0.0134642], [3, 0.16, 0.00384691]],
                 [0.0859543, [3, -0.16, 0], [3, 0.16, 0]], [0.0859543, [3, -0.16, 0], [3, 0.08, 0]],
                 [0.0859543, [3, -0.08, 0], [3, 0.08, 0]], [0.0859543, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0859543, [3, -0.08, 0], [3, 0.08, 0]], [0.0859543, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0859543, [3, -0.08, 0], [3, 0.08, 0]], [0.0859543, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0859543, [3, -0.08, 0], [3, 0.08, 0]], [0.0859543, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0859543, [3, -0.08, 0], [3, 0.08, 0]], [0.0859543, [3, -0.08, 0], [3, 0.0933333, 0]],
                 [0.0859543, [3, -0.0933333, 0], [3, 0.493333, 0]], [0.00611816, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[-0.0360332, [3, -0.506667, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.08, 0]], [-0.0650214, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.0360332, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.0650214, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [-0.00960257, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[-1.2051, [3, -0.506667, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.08, 0]], [-1.2051, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.2051, [3, -0.08, 0], [3, 0.0933333, 0]], [-1.2051, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [-0.532453, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[-0.46639, [3, -0.506667, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.08, 0]], [-0.265904, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.46639, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.265904, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [-1.22773, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[0.41, [3, -0.506667, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.08, 0]], [0.2, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.41, [3, -0.08, 0], [3, 0.0933333, 0]], [0.2, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [0.597894, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[-0.279855, [3, -0.506667, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.08, 0]], [0.00732489, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.279855, [3, -0.08, 0], [3, 0.0933333, 0]],
                 [0.00732489, [3, -0.0933333, -0.0975334], [3, 0.493333, 0.515534]],
                 [1.55935, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[0.0468284, [3, -0.506667, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.08, 0]], [0.0468284, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.0468284, [3, -0.08, 0], [3, 0.0933333, 0]], [0.0468284, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [0.148478, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[-1.15957, [3, -0.506667, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.08, 0]], [-1.15957, [3, -0.08, 0], [3, 0.08, 0]],
                 [-1.15957, [3, -0.08, 0], [3, 0.0933333, 0]], [-1.15957, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [-0.00352649, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[1.36621, [3, -0.506667, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.08, 0]], [1.17461, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.36621, [3, -0.08, 0], [3, 0.0933333, 0]],
                 [1.17461, [3, -0.0933333, 0.0447016], [3, 0.493333, -0.23628]],
                 [0.52326, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[1.24397, [3, -0.506667, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.08, 0]], [1.24397, [3, -0.08, 0], [3, 0.08, 0]],
                 [1.24397, [3, -0.08, 0], [3, 0.0933333, 0]], [1.24397, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [1.22829, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[0.54, [3, -0.506667, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.08, 0]], [0.66, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.54, [3, -0.08, 0], [3, 0.0933333, 0]], [0.66, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [0.6, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[0.899323, [3, -0.506667, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.08, 0]], [1.09872, [3, -0.08, 0], [3, 0.08, 0]],
                 [0.899323, [3, -0.08, 0], [3, 0.0933333, 0]],
                 [1.09872, [3, -0.0933333, -0.0345656], [3, 0.493333, 0.182704]],
                 [1.55113, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append([[-0.149914, [3, -0.506667, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.08, 0]], [-0.149914, [3, -0.08, 0], [3, 0.08, 0]],
                 [-0.149914, [3, -0.08, 0], [3, 0.0933333, 0]], [-0.149914, [3, -0.0933333, 0], [3, 0.493333, 0]],
                 [-0.138836, [3, -0.493333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append(
        [1.48, 1.72, 1.96, 2.2, 2.44, 2.68, 2.92, 3.16, 3.4, 3.64, 3.88, 4.12, 4.36, 4.6, 4.84, 5.08, 5.32, 5.56, 5.8,
         6.04, 6.28, 6.52, 6.76, 7, 7.24, 7.48, 7.72, 7.96, 8.2, 8.44, 8.68, 8.96, 10.44])
    keys.append(
        [[0, [3, -0.506667, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.08, 0]],
         [0, [3, -0.08, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.493333, 0]],
         [-0.00179495, [3, -0.493333, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        # motion = ALProxy("ALMotion", IP, 9559)
        motion = srv["motion"]
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err
