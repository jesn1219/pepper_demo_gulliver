# Choregraphe bezier export in Python.
from naoqi import ALProxy


# the motion during taking the picture
def take_picture(srv):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.64, 1.24, 1.44, 1.92, 2.28, 2.92, 3.56])
    keys.append(
        [[0.118682, [3, -0.226667, 0], [3, 0.2, 0]], [-0.0568, [3, -0.2, 0.0637045], [3, 0.0666667, -0.0212348]],
         [-0.136136, [3, -0.0666667, 0], [3, 0.16, 0]], [-0.0982179, [3, -0.16, -0.012993], [3, 0.12, 0.00974475]],
         [-0.0679225, [3, -0.12, -0.0224676], [3, 0.213333, 0.0399423]],
         [0.0890118, [3, -0.213333, 0], [3, 0.213333, 0]], [-0.174919, [3, -0.213333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([1.24, 1.44, 1.92, 2.28, 3.56])
    keys.append([[-0.0429939, [3, -0.426667, 0], [3, 0.0666667, 0]],
                 [-0.04913, [3, -0.0666667, 0.000902352], [3, 0.16, -0.00216565]],
                 [-0.0521979, [3, -0.16, 0], [3, 0.12, 0]],
                 [-0.0472663, [3, -0.12, -0.00235711], [3, 0.426667, 0.00838085]],
                 [-0.019984, [3, -0.426667, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.6, 1.2, 2.28, 2.88, 3.48])
    keys.append([[-0.271322, [3, -0.213333, 0], [3, 0.2, 0]], [-0.0361119, [3, -0.2, 0], [3, 0.36, 0]],
                 [-0.0361119, [3, -0.36, 0], [3, 0.2, 0]], [-0.336257, [3, -0.2, 0], [3, 0.2, 0]],
                 [-0.0383187, [3, -0.2, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([1.2, 2.28, 3.48])
    keys.append([[0, [3, -0.413333, 0], [3, 0.36, 0]], [0, [3, -0.36, 0], [3, 0.4, 0]], [0, [3, -0.4, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.6, 1.2, 2.28, 2.88, 3.48])
    keys.append([[0.138742, [3, -0.213333, 0], [3, 0.2, 0]], [0.00242048, [3, -0.2, 0], [3, 0.36, 0]],
                 [0.00242048, [3, -0.36, 0], [3, 0.2, 0]], [0.1564, [3, -0.2, 0], [3, 0.2, 0]],
                 [-0.00452053, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.56, 1.2, 1.68, 2.28, 2.88, 3.48])
    keys.append([[-1.20428, [3, -0.2, 0], [3, 0.213333, 0]], [-1.54462, [3, -0.213333, 0], [3, 0.16, 0]],
                 [-1.54462, [3, -0.16, 0], [3, 0.2, 0]], [-1.53251, [3, -0.2, -0.0121091], [3, 0.2, 0.0121091]],
                 [-1.43466, [3, -0.2, -0.0978467], [3, 0.2, 0.0978467]], [-0.444818, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.56, 1.2, 1.68, 1.8, 2.28, 3.48])
    keys.append([[-0.720821, [3, -0.2, 0], [3, 0.213333, 0]], [-0.812638, [3, -0.213333, 0], [3, 0.16, 0]],
                 [-0.812638, [3, -0.16, 0], [3, 0.04, 0]], [-0.714819, [3, -0.04, 0], [3, 0.16, 0]],
                 [-0.820306, [3, -0.16, 0.0431045], [3, 0.4, -0.107761]], [-1.16742, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.56, 1.2, 1.68, 1.8, 1.92, 2.28, 3.48])
    keys.append(
        [[0.57, [3, -0.2, 0], [3, 0.213333, 0]], [1, [3, -0.213333, 0], [3, 0.16, 0]], [1, [3, -0.16, 0], [3, 0.04, 0]],
         [0.12, [3, -0.04, 0], [3, 0.04, 0]], [1, [3, -0.04, 0], [3, 0.12, 0]],
         [0.9004, [3, -0.12, 0.0536615], [3, 0.4, -0.178872]], [0.3024, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([1.2, 1.68, 2.28, 3.48])
    keys.append([[-0.512163, [3, -0.413333, 0], [3, 0.16, 0]], [-0.512163, [3, -0.16, 0], [3, 0.2, 0]],
                 [-0.438531, [3, -0.2, -0.073632], [3, 0.4, 0.147264]], [1.50635, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.56, 1.2, 1.68, 2.28, 3.48])
    keys.append([[0.572468, [3, -0.2, 0], [3, 0.213333, 0]], [0.478953, [3, -0.213333, 0], [3, 0.16, 0]],
                 [0.478953, [3, -0.16, 0], [3, 0.2, 0]], [0.457477, [3, -0.2, 0.0214763], [3, 0.4, -0.0429525]],
                 [0.116542, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.56, 1.2, 1.68, 2.28, 3.48])
    keys.append([[0.392699, [3, -0.2, 0], [3, 0.213333, 0]], [0.237991, [3, -0.213333, 0], [3, 0.16, 0]],
                 [0.237991, [3, -0.16, 0], [3, 0.2, 0]], [0.253331, [3, -0.2, 0], [3, 0.4, 0]],
                 [0.130348, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.56, 1.2, 1.68, 2.28, 2.88, 3.48])
    keys.append([[1.20428, [3, -0.2, 0], [3, 0.213333, 0]], [1.54462, [3, -0.213333, 0], [3, 0.16, 0]],
                 [1.54462, [3, -0.16, 0], [3, 0.2, 0]], [1.53251, [3, -0.2, 0.0121091], [3, 0.2, -0.0121091]],
                 [1.43466, [3, -0.2, 0.0978467], [3, 0.2, -0.0978467]], [0.418823, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.56, 1.2, 1.68, 1.8, 2.28, 3.48])
    keys.append([[0.720821, [3, -0.2, 0], [3, 0.213333, 0]], [0.812638, [3, -0.213333, 0], [3, 0.16, 0]],
                 [0.812638, [3, -0.16, 0], [3, 0.04, 0]], [0.714819, [3, -0.04, 0], [3, 0.16, 0]],
                 [0.820306, [3, -0.16, -0.0417817], [3, 0.4, 0.104454]], [1.15353, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.56, 1.2, 1.68, 1.8, 1.92, 2.28, 3.48])
    keys.append(
        [[0.57, [3, -0.2, 0], [3, 0.213333, 0]], [1, [3, -0.213333, 0], [3, 0.16, 0]], [1, [3, -0.16, 0], [3, 0.04, 0]],
         [0.12, [3, -0.04, 0], [3, 0.04, 0]], [1, [3, -0.04, 0], [3, 0.12, 0]],
         [0.9004, [3, -0.12, 0.0534462], [3, 0.4, -0.178154]], [0.3052, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([1.2, 1.68, 2.28, 3.48])
    keys.append([[-0.512163, [3, -0.413333, 0], [3, 0.16, 0]], [-0.512163, [3, -0.16, 0], [3, 0.2, 0]],
                 [-0.438531, [3, -0.2, -0.073632], [3, 0.4, 0.147264]], [1.5049, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.56, 1.2, 1.68, 2.28, 3.48])
    keys.append([[-0.572468, [3, -0.2, 0], [3, 0.213333, 0]], [-0.478953, [3, -0.213333, 0], [3, 0.16, 0]],
                 [-0.478953, [3, -0.16, 0], [3, 0.2, 0]], [-0.457477, [3, -0.2, -0.0214763], [3, 0.4, 0.0429525]],
                 [-0.127364, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.56, 1.2, 1.68, 2.28, 3.48])
    keys.append([[-0.392699, [3, -0.2, 0], [3, 0.213333, 0]], [-0.237991, [3, -0.213333, 0], [3, 0.16, 0]],
                 [-0.237991, [3, -0.16, 0], [3, 0.2, 0]], [-0.253331, [3, -0.2, 0], [3, 0.4, 0]],
                 [0.177901, [3, -0.4, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        # motion = ALProxy("ALMotion", IP, 9559)
        motion = srv["motion"]
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


def stand(srv):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.6, 1.12])
    keys.append([[-0.116716, [3, -0.213333, 0], [3, 0.173333, 0]], [-0.267089, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([1.12])
    keys.append([[-0.0506639, [3, -0.386667, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.52, 1.12])
    keys.append([[-0.252465, [3, -0.186667, 0], [3, 0.2, 0]], [-0.047314, [3, -0.2, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([1.12])
    keys.append([[-0.000210625, [3, -0.386667, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.52, 1.12])
    keys.append([[0.122345, [3, -0.186667, 0], [3, 0.2, 0]], [-0.0107781, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.48, 1.04])
    keys.append([[-0.965167, [3, -0.173333, 0], [3, 0.186667, 0]], [-0.58748, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.48, 1.04])
    keys.append([[-1.11177, [3, -0.173333, 0], [3, 0.186667, 0]], [-0.385075, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.48, 1.04])
    keys.append([[0.68, [3, -0.173333, 0], [3, 0.186667, 0]], [0.1684, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.56, 1.12])
    keys.append([[1.09607, [3, -0.2, 0], [3, 0.186667, 0]], [1.25017, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.56, 1.12])
    keys.append([[0.328879, [3, -0.2, 0], [3, 0.186667, 0]], [0.00872665, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.48, 1.04])
    keys.append([[-0.733038, [3, -0.173333, 0], [3, 0.186667, 0]], [-0.312978, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.56, 1.12])
    keys.append([[0.965167, [3, -0.2, 0], [3, 0.186667, 0]], [0.714885, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.56, 1.12])
    keys.append([[1.11177, [3, -0.2, 0], [3, 0.186667, 0]], [0.386526, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.56, 1.12])
    keys.append([[0.71, [3, -0.2, 0], [3, 0.186667, 0]], [0.1668, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.64, 1.24])
    keys.append([[1.12574, [3, -0.226667, 0], [3, 0.2, 0]], [1.26099, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.64, 1.24])
    keys.append([[-0.44197, [3, -0.226667, 0], [3, 0.2, 0]], [-0.0231497, [3, -0.2, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.56, 1.12])
    keys.append([[0.289725, [3, -0.2, 0], [3, 0.186667, 0]], [0.315962, [3, -0.186667, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        # motion = ALProxy("ALMotion", IP, 9559)
        motion = srv["motion"]
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err
