# Choregraphe bezier export in Python.
from naoqi import ALProxy


def elephant(srv):
    motion = srv["motion"]
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0.637045, [3, -0.426667, 0], [3, 0.36, 0]], [0.149268, [3, -0.36, 0], [3, 0.466667, 0]], [0.637045, [3, -0.466667, 0], [3, 0.36, 0]], [0.149268, [3, -0.36, 0], [3, 0.44, 0]], [0.637045, [3, -0.44, 0], [3, 0.346667, 0]], [-0.208621, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-0.3735, [3, -0.426667, 0], [3, 0.36, 0]], [-0.370809, [3, -0.36, 0], [3, 0.466667, 0]], [-0.3735, [3, -0.466667, 0], [3, 0.36, 0]], [-0.370809, [3, -0.36, 0], [3, 0.44, 0]], [-0.3735, [3, -0.44, 0], [3, 0.346667, 0]], [-0.00460196, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.96, 2.04, 3.44, 4.52, 5.84, 7.16])
    keys.append([[-0.941134, [3, -0.333333, 0], [3, 0.36, 0]], [-0.0407854, [3, -0.36, 0], [3, 0.466667, 0]], [-0.941134, [3, -0.466667, 0], [3, 0.36, 0]], [-0.0407854, [3, -0.36, 0], [3, 0.44, 0]], [-0.941134, [3, -0.44, 0], [3, 0.44, 0]], [-0.0352817, [3, -0.44, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.96, 2.04, 3.44, 4.52, 5.84, 7.16])
    keys.append([[-0.00218318, [3, -0.333333, 0], [3, 0.36, 0]], [-0.00218318, [3, -0.36, 0], [3, 0.466667, 0]], [-0.00218318, [3, -0.466667, 0], [3, 0.36, 0]], [-0.00218318, [3, -0.36, 0], [3, 0.44, 0]], [-0.00218318, [3, -0.44, 0], [3, 0.44, 0]], [-0.00766992, [3, -0.44, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.96, 2.04, 3.44, 4.52, 5.84, 7.16])
    keys.append([[0.353169, [3, -0.333333, 0], [3, 0.36, 0]], [-0.00319533, [3, -0.36, 0], [3, 0.466667, 0]], [0.353169, [3, -0.466667, 0], [3, 0.36, 0]], [-0.00319533, [3, -0.36, 0], [3, 0.44, 0]], [0.353169, [3, -0.44, 0], [3, 0.44, 0]], [-0.00766992, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-1.56207, [3, -0.426667, 0], [3, 0.36, 0]], [-1.54741, [3, -0.36, 0], [3, 0.466667, 0]], [-1.56207, [3, -0.466667, 0], [3, 0.36, 0]], [-1.54741, [3, -0.36, 0], [3, 0.44, 0]], [-1.56207, [3, -0.44, 0], [3, 0.346667, 0]], [-0.515418, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0, [3, -0.426667, 0], [3, 0.36, 0]], [0.0280028, [3, -0.36, 0], [3, 0.466667, 0]], [0, [3, -0.466667, 0], [3, 0.36, 0]], [0.0280028, [3, -0.36, 0], [3, 0.44, 0]], [0, [3, -0.44, 0.0280028], [3, 0.346667, -0.0220628]], [-1.23792, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0.602755, [3, -0.426667, 0], [3, 0.36, 0]], [0.602755, [3, -0.36, 0], [3, 0.466667, 0]], [0.602755, [3, -0.466667, 0], [3, 0.36, 0]], [0.602755, [3, -0.36, 0], [3, 0.44, 0]], [0.602755, [3, -0.44, 0], [3, 0.346667, 0]], [0.589631, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-0.403171, [3, -0.426667, 0], [3, 0.36, 0]], [-0.654399, [3, -0.36, 0], [3, 0.466667, 0]], [-0.403171, [3, -0.466667, 0], [3, 0.36, 0]], [-0.654399, [3, -0.36, 0], [3, 0.44, 0]], [-0.403171, [3, -0.44, -0.251228], [3, 0.346667, 0.197937]], [1.55699, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0.139697, [3, -0.426667, 0], [3, 0.36, 0]], [0.15506, [3, -0.36, 0], [3, 0.466667, 0]], [0.139697, [3, -0.466667, 0], [3, 0.36, 0]], [0.15506, [3, -0.36, 0], [3, 0.44, 0]], [0.139697, [3, -0.44, 0.00517175], [3, 0.346667, -0.00407471]], [0.127321, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0, [3, -0.426667, 0], [3, 0.36, 0]], [0, [3, -0.36, 0], [3, 0.466667, 0]], [0, [3, -0.466667, 0], [3, 0.36, 0]], [0, [3, -0.36, 0], [3, 0.44, 0]], [0, [3, -0.44, 0], [3, 0.346667, 0]], [0.0106959, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([1.24, 1.8, 2.84, 3.72, 4.28, 5.32, 6.12, 7.16])
    keys.append([[0.534071, [3, -0.426667, 0], [3, 0.186667, 0]], [0.00872665, [3, -0.186667, 0], [3, 0.346667, 0]], [0.884857, [3, -0.346667, 0], [3, 0.293333, 0]], [0.534071, [3, -0.293333, 0.178471], [3, 0.186667, -0.113573]], [0.00872665, [3, -0.186667, 0], [3, 0.346667, 0]], [0.884857, [3, -0.346667, 0], [3, 0.266667, 0]], [0.534071, [3, -0.266667, 0.0037283], [3, 0.346667, -0.00484679]], [0.529224, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[1.2363, [3, -0.426667, 0], [3, 0.36, 0]], [1.24098, [3, -0.36, 0], [3, 0.466667, 0]], [1.2363, [3, -0.466667, 0], [3, 0.36, 0]], [1.24098, [3, -0.36, 0], [3, 0.44, 0]], [1.2363, [3, -0.44, 0.00114215], [3, 0.346667, -0.000899875]], [1.23486, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([1.76, 2.84, 4.24, 5.32, 7.16])
    keys.append([[0.602465, [3, -0.6, 0], [3, 0.36, 0]], [0.98, [3, -0.36, 0], [3, 0.466667, 0]], [0.602465, [3, -0.466667, 0], [3, 0.36, 0]], [0.98, [3, -0.36, 0], [3, 0.613333, 0]], [0.599297, [3, -0.613333, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0.53058, [3, -0.426667, 0], [3, 0.36, 0]], [-0.506132, [3, -0.36, 0], [3, 0.466667, 0]], [0.53058, [3, -0.466667, 0], [3, 0.36, 0]], [-0.506132, [3, -0.36, 0], [3, 0.44, 0]], [0.53058, [3, -0.44, -0.384078], [3, 0.346667, 0.302607]], [1.55392, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-0.00872665, [3, -0.426667, 0], [3, 0.36, 0]], [-0.0383779, [3, -0.36, 0], [3, 0.466667, 0]], [-0.00872665, [3, -0.466667, 0], [3, 0.36, 0]], [-0.0383779, [3, -0.36, 0], [3, 0.44, 0]], [-0.00872665, [3, -0.44, 0], [3, 0.346667, 0]], [-0.13499, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-1.27409, [3, -0.426667, 0], [3, 0.36, 0]], [-1.27223, [3, -0.36, 0], [3, 0.466667, 0]], [-1.27409, [3, -0.466667, 0], [3, 0.36, 0]], [-1.27223, [3, -0.36, 0], [3, 0.44, 0]], [-1.27409, [3, -0.44, 0], [3, 0.346667, 0]], [-0.019984, [3, -0.346667, 0], [3, 0, 0]]])
    motion.angleInterpolationBezier(names, times, keys)


def disco(srv):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.16, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
    keys.append([[-0.476475, [3, -0.52, 0], [3, 0.28, 0]], [0.338594, [3, -0.28, 0], [3, 0.32, 0]], [-0.476475, [3, -0.32, 0], [3, 0.28, 0]], [0.338594, [3, -0.28, 0], [3, 0.306667, 0]], [-0.476475, [3, -0.306667, 0], [3, 0.28, 0]], [0.338594, [3, -0.28, 0], [3, 0.32, 0]], [-0.476475, [3, -0.32, 0], [3, 0.28, 0]], [0.338594, [3, -0.28, 0], [3, 0.146667, 0]], [0.0680678, [3, -0.146667, 0.106735], [3, 0.226667, -0.164954]], [-0.476475, [3, -0.226667, 0], [3, 0.28, 0]], [0.338594, [3, -0.28, 0], [3, 0.32, 0]], [-0.476475, [3, -0.32, 0], [3, 0.28, 0]], [0.338594, [3, -0.28, 0], [3, 0.306667, 0]], [-0.476475, [3, -0.306667, 0], [3, 0.28, 0]], [0.338594, [3, -0.28, 0], [3, 0.32, 0]], [-0.476475, [3, -0.32, 0], [3, 0.28, 0]], [0.338594, [3, -0.28, 0], [3, 0.4, 0]], [-0.17185, [3, -0.4, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.16, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
    keys.append([[-0.745256, [3, -0.52, 0], [3, 0.28, 0]], [0.0411095, [3, -0.28, 0], [3, 0.32, 0]], [-0.745256, [3, -0.32, 0], [3, 0.28, 0]], [0.0411095, [3, -0.28, 0], [3, 0.306667, 0]], [-0.745256, [3, -0.306667, 0], [3, 0.28, 0]], [0.018508, [3, -0.28, 0], [3, 0.32, 0]], [-0.745256, [3, -0.32, 0], [3, 0.28, 0]], [0.289725, [3, -0.28, -0.256143], [3, 0.146667, 0.13417]], [0.425684, [3, -0.146667, -0.0596529], [3, 0.226667, 0.0921908]], [0.745256, [3, -0.226667, 0], [3, 0.28, 0]], [-0.0411095, [3, -0.28, 0], [3, 0.32, 0]], [0.745256, [3, -0.32, 0], [3, 0.28, 0]], [-0.0411095, [3, -0.28, 0], [3, 0.306667, 0]], [0.745256, [3, -0.306667, 0], [3, 0.28, 0]], [-0.018508, [3, -0.28, 0], [3, 0.32, 0]], [0.745256, [3, -0.32, 0], [3, 0.28, 0]], [-0.289725, [3, -0.28, 0], [3, 0.4, 0]], [0.00916195, [3, -0.4, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.72, 1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
    keys.append([[-0.376033, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.036954, [3, -0.266667, 0], [3, 0.28, 0]], [-0.344024, [3, -0.28, 0], [3, 0.32, 0]], [-0.0404086, [3, -0.32, 0], [3, 0.28, 0]], [-0.339835, [3, -0.28, 0], [3, 0.306667, 0]], [-0.038321, [3, -0.306667, 0], [3, 0.28, 0]], [-0.341769, [3, -0.28, 0], [3, 0.32, 0]], [-0.0367355, [3, -0.32, 0], [3, 0.28, 0]], [-0.34817, [3, -0.28, 0], [3, 0.373333, 0]], [-0.035085, [3, -0.373333, 0], [3, 0.28, 0]], [-0.341769, [3, -0.28, 0], [3, 0.32, 0]], [-0.0382761, [3, -0.32, 0], [3, 0.28, 0]], [-0.339629, [3, -0.28, 0], [3, 0.306667, 0]], [-0.0396041, [3, -0.306667, 0], [3, 0.28, 0]], [-0.341605, [3, -0.28, 0], [3, 0.32, 0]], [-0.0362713, [3, -0.32, 0], [3, 0.28, 0]], [-0.343065, [3, -0.28, 0], [3, 0.4, 0]], [-0.0495279, [3, -0.4, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
    keys.append([[0, [3, -0.52, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.32, 0]], [0, [3, -0.32, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.306667, 0]], [0, [3, -0.306667, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.32, 0]], [0, [3, -0.32, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.373333, 0]], [0, [3, -0.373333, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.32, 0]], [0, [3, -0.32, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.306667, 0]], [0, [3, -0.306667, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.32, 0]], [0, [3, -0.32, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0.4, 0]], [0, [3, -0.4, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.72, 1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
    keys.append([[0.166965, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.00379234, [3, -0.266667, 0], [3, 0.28, 0]], [0.185949, [3, -0.28, 0], [3, 0.32, 0]], [-0.0129339, [3, -0.32, 0], [3, 0.28, 0]], [0.180821, [3, -0.28, 0], [3, 0.306667, 0]], [-0.00320919, [3, -0.306667, 0], [3, 0.28, 0]], [0.187035, [3, -0.28, 0], [3, 0.32, 0]], [-0.00931236, [3, -0.32, 0], [3, 0.28, 0]], [0.182162, [3, -0.28, 0], [3, 0.373333, 0]], [-0.0111253, [3, -0.373333, 0], [3, 0.28, 0]], [0.187035, [3, -0.28, 0], [3, 0.32, 0]], [-0.00683206, [3, -0.32, 0], [3, 0.28, 0]], [0.184441, [3, -0.28, 0], [3, 0.306667, 0]], [-0.0119436, [3, -0.306667, 0], [3, 0.28, 0]], [0.179202, [3, -0.28, 0], [3, 0.32, 0]], [-0.0114876, [3, -0.32, 0], [3, 0.28, 0]], [0.187691, [3, -0.28, 0], [3, 0.4, 0]], [-0.013167, [3, -0.4, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.68, 1.04, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.12, 8.48, 8.8, 9.2, 9.64, 10.12, 10.6, 11, 11.44, 11.92, 12.36, 12.76, 13.2, 13.68, 14.16, 14.56, 15, 15.6, 16.2, 16.4])
    keys.append([[-1.37289, [3, -0.24, 0], [3, 0.12, 0]], [-1.12923, [3, -0.12, -0.150485], [3, 0.146667, 0.183927]], [-0.369652, [3, -0.146667, -0.0875841], [3, 0.28, 0.167206]], [-0.202446, [3, -0.28, 0], [3, 0.32, 0]], [-0.369652, [3, -0.32, 0], [3, 0.28, 0]], [-0.202446, [3, -0.28, 0], [3, 0.306667, 0]], [-0.369652, [3, -0.306667, 0], [3, 0.28, 0]], [-0.202446, [3, -0.28, 0], [3, 0.32, 0]], [-0.369652, [3, -0.32, 0], [3, 0.28, 0]], [-0.202446, [3, -0.28, 0], [3, 0.146667, 0]], [-0.820305, [3, -0.146667, 0], [3, 0.12, 0]], [-0.23305, [3, -0.12, -0.106817], [3, 0.106667, 0.0949484]], [-0.138102, [3, -0.106667, 0], [3, 0.133333, 0]], [-1.309, [3, -0.133333, 0], [3, 0.146667, 0]], [-0.257754, [3, -0.146667, 0], [3, 0.16, 0]], [-1.4591, [3, -0.16, 0], [3, 0.16, 0]], [-0.138102, [3, -0.16, 0], [3, 0.133333, 0]], [-1.309, [3, -0.133333, 0], [3, 0.146667, 0]], [-0.257754, [3, -0.146667, 0], [3, 0.16, 0]], [-1.4591, [3, -0.16, 0], [3, 0.146667, 0]], [-0.138102, [3, -0.146667, 0], [3, 0.133333, 0]], [-1.309, [3, -0.133333, 0], [3, 0.146667, 0]], [-0.257754, [3, -0.146667, 0], [3, 0.16, 0]], [-1.4591, [3, -0.16, 0], [3, 0.16, 0]], [-0.138102, [3, -0.16, 0], [3, 0.133333, 0]], [-1.309, [3, -0.133333, 0], [3, 0.146667, 0]], [-0.257754, [3, -0.146667, 0], [3, 0.2, 0]], [-0.984366, [3, -0.2, 0], [3, 0.2, 0]], [-0.513992, [3, -0.2, -0.139872], [3, 0.0666667, 0.0466242]], [-0.424876, [3, -0.0666667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.68, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.12, 8.48, 8.8, 9.2, 9.64, 10.12, 10.6, 11, 11.44, 11.92, 12.36, 12.76, 13.2, 13.68, 14.16, 14.56, 15, 15.6, 16.2, 16.4])
    keys.append([[-0.65506, [3, -0.24, 0], [3, 0.266667, 0]], [-0.380475, [3, -0.266667, 0], [3, 0.28, 0]], [-0.618244, [3, -0.28, 0], [3, 0.32, 0]], [-0.380475, [3, -0.32, 0], [3, 0.28, 0]], [-0.618244, [3, -0.28, 0], [3, 0.306667, 0]], [-0.380475, [3, -0.306667, 0], [3, 0.28, 0]], [-0.618244, [3, -0.28, 0], [3, 0.32, 0]], [-0.380475, [3, -0.32, 0], [3, 0.28, 0]], [-0.618244, [3, -0.28, 0], [3, 0.146667, 0]], [0.410152, [3, -0.146667, -0.263362], [3, 0.12, 0.215478]], [0.818273, [3, -0.12, -0.0372809], [3, 0.106667, 0.0331386]], [0.851412, [3, -0.106667, 0], [3, 0.133333, 0]], [0.0750492, [3, -0.133333, 0.0667938], [3, 0.146667, -0.0734732]], [0.00157596, [3, -0.146667, 0], [3, 0.16, 0]], [0.460767, [3, -0.16, -0.141639], [3, 0.16, 0.141639]], [0.851412, [3, -0.16, 0], [3, 0.133333, 0]], [0.0750492, [3, -0.133333, 0.0667938], [3, 0.146667, -0.0734732]], [0.00157596, [3, -0.146667, 0], [3, 0.16, 0]], [0.460767, [3, -0.16, -0.147798], [3, 0.146667, 0.135481]], [0.851412, [3, -0.146667, 0], [3, 0.133333, 0]], [0.0750492, [3, -0.133333, 0.0667938], [3, 0.146667, -0.0734732]], [0.00157596, [3, -0.146667, 0], [3, 0.16, 0]], [0.460767, [3, -0.16, -0.141639], [3, 0.16, 0.141639]], [0.851412, [3, -0.16, 0], [3, 0.133333, 0]], [0.0750492, [3, -0.133333, 0.0667938], [3, 0.146667, -0.0734732]], [0.00157596, [3, -0.146667, 0.0734732], [3, 0.2, -0.100191]], [-1.34565, [3, -0.2, 0], [3, 0.2, 0]], [-1.22484, [3, -0.2, -0.0338201], [3, 0.0666667, 0.0112734]], [-1.21037, [3, -0.0666667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.68, 1.04, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.48, 8.8, 9.2, 9.64, 10.12, 10.6, 11, 11.44, 11.92, 12.36, 12.76, 13.2, 13.68, 14.16, 14.56, 15, 15.6, 16.2, 16.4])
    keys.append([[0.2, [3, -0.24, 0], [3, 0.12, 0]], [0.6, [3, -0.12, 0], [3, 0.146667, 0]], [0.2648, [3, -0.146667, 0.000419055], [3, 0.28, -0.000800013]], [0.264, [3, -0.28, 0], [3, 0.32, 0]], [0.2648, [3, -0.32, 0], [3, 0.28, 0]], [0.264, [3, -0.28, 0], [3, 0.306667, 0]], [0.2648, [3, -0.306667, 0], [3, 0.28, 0]], [0.264, [3, -0.28, 0], [3, 0.32, 0]], [0.2648, [3, -0.32, 0], [3, 0.28, 0]], [0.264, [3, -0.28, 0], [3, 0.266667, 0]], [0.663802, [3, -0.266667, -0.158095], [3, 0.106667, 0.0632381]], [0.928, [3, -0.106667, 0], [3, 0.133333, 0]], [0.3, [3, -0.133333, 0.142794], [3, 0.146667, -0.157073]], [0.0283999, [3, -0.146667, 0], [3, 0.16, 0]], [0.75, [3, -0.16, -0.149933], [3, 0.16, 0.149933]], [0.928, [3, -0.16, 0], [3, 0.133333, 0]], [0.3, [3, -0.133333, 0.142794], [3, 0.146667, -0.157073]], [0.0283999, [3, -0.146667, 0], [3, 0.16, 0]], [0.75, [3, -0.16, -0.156452], [3, 0.146667, 0.143415]], [0.928, [3, -0.146667, 0], [3, 0.133333, 0]], [0.3, [3, -0.133333, 0.142794], [3, 0.146667, -0.157073]], [0.0283999, [3, -0.146667, 0], [3, 0.16, 0]], [0.75, [3, -0.16, -0.149933], [3, 0.16, 0.149933]], [0.928, [3, -0.16, 0], [3, 0.133333, 0]], [0.3, [3, -0.133333, 0], [3, 0.146667, 0]], [0.5284, [3, -0.146667, -0.0897482], [3, 0.2, 0.122384]], [0.936396, [3, -0.2, -0.013951], [3, 0.2, 0.013951]], [0.950347, [3, -0.2, 0], [3, 0.0666667, 0]], [0.2968, [3, -0.0666667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.68, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.12, 8.48, 8.8, 9.64, 10.6, 11.44, 12.36, 13.2, 14.16, 15, 16.4])
    keys.append([[0.97784, [3, -0.24, 0], [3, 0.266667, 0]], [1.29573, [3, -0.266667, -0.0694014], [3, 0.28, 0.0728715]], [1.40466, [3, -0.28, 0], [3, 0.32, 0]], [1.29573, [3, -0.32, 0], [3, 0.28, 0]], [1.40466, [3, -0.28, 0], [3, 0.306667, 0]], [1.29573, [3, -0.306667, 0], [3, 0.28, 0]], [1.40466, [3, -0.28, 0], [3, 0.32, 0]], [1.29573, [3, -0.32, 0], [3, 0.28, 0]], [1.40466, [3, -0.28, 0], [3, 0.146667, 0]], [0.172788, [3, -0.146667, 0.449845], [3, 0.12, -0.368055]], [-1.04904, [3, -0.12, 0.160692], [3, 0.106667, -0.142838]], [-1.19188, [3, -0.106667, 0], [3, 0.28, 0]], [0.995607, [3, -0.28, 0], [3, 0.32, 0]], [-1.19188, [3, -0.32, 0], [3, 0.28, 0]], [0.995607, [3, -0.28, 0], [3, 0.306667, 0]], [-1.19188, [3, -0.306667, 0], [3, 0.28, 0]], [0.995607, [3, -0.28, 0], [3, 0.32, 0]], [-1.19188, [3, -0.32, 0], [3, 0.28, 0]], [0.995607, [3, -0.28, -0.285274], [3, 0.466667, 0.475457]], [1.47106, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.68, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.48, 8.8, 9.2, 9.64, 10.12, 10.6, 11, 11.44, 11.92, 12.36, 12.76, 13.2, 13.68, 14.16, 14.56, 15, 15.6, 16.2])
    keys.append([[0.500047, [3, -0.24, 0], [3, 0.266667, 0]], [0.401871, [3, -0.266667, 0.0234467], [3, 0.28, -0.0246191]], [0.35585, [3, -0.28, 0], [3, 0.32, 0]], [0.401871, [3, -0.32, 0], [3, 0.28, 0]], [0.35585, [3, -0.28, 0], [3, 0.306667, 0]], [0.401871, [3, -0.306667, 0], [3, 0.28, 0]], [0.35585, [3, -0.28, 0], [3, 0.32, 0]], [0.401871, [3, -0.32, 0], [3, 0.28, 0]], [0.35585, [3, -0.28, 0], [3, 0.266667, 0]], [0.886453, [3, -0.266667, -0.145388], [3, 0.106667, 0.0581554]], [0.966481, [3, -0.106667, -0.0513879], [3, 0.133333, 0.0642349]], [1.23332, [3, -0.133333, 0], [3, 0.146667, 0]], [0.324005, [3, -0.146667, 0], [3, 0.16, 0]], [1.23332, [3, -0.16, 0], [3, 0.16, 0]], [0.966481, [3, -0.16, 0], [3, 0.133333, 0]], [1.23332, [3, -0.133333, 0], [3, 0.146667, 0]], [0.324005, [3, -0.146667, 0], [3, 0.16, 0]], [1.23332, [3, -0.16, 0], [3, 0.146667, 0]], [0.966481, [3, -0.146667, 0], [3, 0.133333, 0]], [1.23332, [3, -0.133333, 0], [3, 0.146667, 0]], [0.324005, [3, -0.146667, 0], [3, 0.16, 0]], [1.23332, [3, -0.16, 0], [3, 0.16, 0]], [0.966481, [3, -0.16, 0], [3, 0.133333, 0]], [1.23332, [3, -0.133333, 0], [3, 0.146667, 0]], [0.324005, [3, -0.146667, 0], [3, 0.2, 0]], [0.407503, [3, -0.2, 0], [3, 0.2, 0]], [0.146991, [3, -0.2, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.68, 1.04, 1.48, 2.32, 3.28, 4.12, 5.04, 5.88, 6.84, 7.68, 8.48, 8.8, 9.64, 10.6, 11.44, 12.36, 13.2, 14.16, 15, 16.2, 16.4])
    keys.append([[0.11961, [3, -0.24, 0], [3, 0.12, 0]], [-0.289725, [3, -0.12, 0.0773137], [3, 0.146667, -0.0944945]], [-0.395814, [3, -0.146667, 0.0128558], [3, 0.28, -0.0245428]], [-0.420357, [3, -0.28, 0], [3, 0.32, 0]], [-0.395814, [3, -0.32, 0], [3, 0.28, 0]], [-0.420357, [3, -0.28, 0], [3, 0.306667, 0]], [-0.395814, [3, -0.306667, 0], [3, 0.28, 0]], [-0.420357, [3, -0.28, 0], [3, 0.32, 0]], [-0.395814, [3, -0.32, 0], [3, 0.28, 0]], [-0.420357, [3, -0.28, 0], [3, 0.266667, 0]], [-0.122946, [3, -0.266667, -0.0390195], [3, 0.106667, 0.0156078]], [-0.107338, [3, -0.106667, 0], [3, 0.28, 0]], [-0.400331, [3, -0.28, 0], [3, 0.32, 0]], [-0.107338, [3, -0.32, 0], [3, 0.28, 0]], [-0.400331, [3, -0.28, 0], [3, 0.306667, 0]], [-0.107338, [3, -0.306667, 0], [3, 0.28, 0]], [-0.400331, [3, -0.28, 0], [3, 0.32, 0]], [-0.107338, [3, -0.32, 0], [3, 0.28, 0]], [-0.400331, [3, -0.28, 0], [3, 0.4, 0]], [0.000370312, [3, -0.4, -0.138036], [3, 0.0666667, 0.023006]], [0.0827939, [3, -0.0666667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.72, 1.08, 1.52, 1.92, 2.36, 2.84, 3.32, 3.72, 4.16, 4.64, 5.08, 5.48, 5.92, 6.4, 6.88, 7.28, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 15.64, 16.24, 16.44])
    keys.append([[1.34689, [3, -0.253333, 0], [3, 0.12, 0]], [1.1205, [3, -0.12, 0.181319], [3, 0.146667, -0.221612]], [0.138102, [3, -0.146667, 0], [3, 0.133333, 0]], [1.309, [3, -0.133333, 0], [3, 0.146667, 0]], [0.257754, [3, -0.146667, 0], [3, 0.16, 0]], [1.4591, [3, -0.16, 0], [3, 0.16, 0]], [0.138102, [3, -0.16, 0], [3, 0.133333, 0]], [1.309, [3, -0.133333, 0], [3, 0.146667, 0]], [0.257754, [3, -0.146667, 0], [3, 0.16, 0]], [1.4591, [3, -0.16, 0], [3, 0.146667, 0]], [0.138102, [3, -0.146667, 0], [3, 0.133333, 0]], [1.309, [3, -0.133333, 0], [3, 0.146667, 0]], [0.257754, [3, -0.146667, 0], [3, 0.16, 0]], [1.4591, [3, -0.16, 0], [3, 0.16, 0]], [0.138102, [3, -0.16, 0], [3, 0.133333, 0]], [1.309, [3, -0.133333, 0], [3, 0.146667, 0]], [0.257754, [3, -0.146667, 0], [3, 0.266667, 0]], [0.372085, [3, -0.266667, 0], [3, 0.106667, 0]], [0.369652, [3, -0.106667, 0.00243296], [3, 0.28, -0.00638653]], [0.202446, [3, -0.28, 0], [3, 0.32, 0]], [0.369652, [3, -0.32, 0], [3, 0.28, 0]], [0.202446, [3, -0.28, 0], [3, 0.306667, 0]], [0.369652, [3, -0.306667, 0], [3, 0.28, 0]], [0.202446, [3, -0.28, 0], [3, 0.32, 0]], [0.369652, [3, -0.32, 0], [3, 0.28, 0]], [0.202446, [3, -0.28, 0], [3, 0.2, 0]], [0.82205, [3, -0.2, 0], [3, 0.2, 0]], [0.519567, [3, -0.2, 0.098122], [3, 0.0666667, -0.0327073]], [0.429562, [3, -0.0666667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.72, 1.08, 1.52, 1.92, 2.36, 2.84, 3.32, 3.72, 4.16, 4.64, 5.08, 5.48, 5.92, 6.4, 6.88, 7.28, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 15.64, 16.24, 16.44])
    keys.append([[0.59515, [3, -0.253333, 0], [3, 0.12, 0]], [0.567232, [3, -0.12, 0.0279183], [3, 0.146667, -0.0341224]], [-0.851412, [3, -0.146667, 0], [3, 0.133333, 0]], [-0.0750492, [3, -0.133333, -0.0667938], [3, 0.146667, 0.0734732]], [-0.00157596, [3, -0.146667, 0], [3, 0.16, 0]], [-0.460767, [3, -0.16, 0.141639], [3, 0.16, -0.141639]], [-0.851412, [3, -0.16, 0], [3, 0.133333, 0]], [-0.0750492, [3, -0.133333, -0.0667938], [3, 0.146667, 0.0734732]], [-0.00157596, [3, -0.146667, 0], [3, 0.16, 0]], [-0.460767, [3, -0.16, 0.147798], [3, 0.146667, -0.135481]], [-0.851412, [3, -0.146667, 0], [3, 0.133333, 0]], [-0.0750492, [3, -0.133333, -0.0667938], [3, 0.146667, 0.0734732]], [-0.00157596, [3, -0.146667, 0], [3, 0.16, 0]], [-0.460767, [3, -0.16, 0.141639], [3, 0.16, -0.141639]], [-0.851412, [3, -0.16, 0], [3, 0.133333, 0]], [-0.0750492, [3, -0.133333, -0.0667938], [3, 0.146667, 0.0734732]], [-0.00157596, [3, -0.146667, -0.0505442], [3, 0.266667, 0.0918985]], [0.352279, [3, -0.266667, -0.0704895], [3, 0.106667, 0.0281958]], [0.380475, [3, -0.106667, -0.0244566], [3, 0.28, 0.0641986]], [0.618244, [3, -0.28, 0], [3, 0.32, 0]], [0.380475, [3, -0.32, 0], [3, 0.28, 0]], [0.618244, [3, -0.28, 0], [3, 0.306667, 0]], [0.380475, [3, -0.306667, 0], [3, 0.28, 0]], [0.618244, [3, -0.28, 0], [3, 0.32, 0]], [0.380475, [3, -0.32, 0], [3, 0.28, 0]], [0.618244, [3, -0.28, -0.172401], [3, 0.2, 0.123144]], [1.26711, [3, -0.2, 0], [3, 0.2, 0]], [1.23132, [3, -0.2, 0.0142061], [3, 0.0666667, -0.00473537]], [1.21028, [3, -0.0666667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.72, 1.08, 1.52, 1.92, 2.36, 2.84, 3.32, 3.72, 4.16, 4.64, 5.08, 5.48, 5.92, 6.4, 6.88, 7.28, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24, 16.44])
    keys.append([[0.2, [3, -0.253333, 0], [3, 0.12, 0]], [0.95, [3, -0.12, 0], [3, 0.146667, 0]], [0.928, [3, -0.146667, 0.022], [3, 0.133333, -0.02]], [0.3, [3, -0.133333, 0.142794], [3, 0.146667, -0.157073]], [0.0283999, [3, -0.146667, 0], [3, 0.16, 0]], [0.75, [3, -0.16, -0.149933], [3, 0.16, 0.149933]], [0.928, [3, -0.16, 0], [3, 0.133333, 0]], [0.3, [3, -0.133333, 0.142794], [3, 0.146667, -0.157073]], [0.0283999, [3, -0.146667, 0], [3, 0.16, 0]], [0.75, [3, -0.16, -0.156452], [3, 0.146667, 0.143415]], [0.928, [3, -0.146667, 0], [3, 0.133333, 0]], [0.3, [3, -0.133333, 0.142794], [3, 0.146667, -0.157073]], [0.0283999, [3, -0.146667, 0], [3, 0.16, 0]], [0.75, [3, -0.16, -0.149933], [3, 0.16, 0.149933]], [0.928, [3, -0.16, 0], [3, 0.133333, 0]], [0.3, [3, -0.133333, 0], [3, 0.146667, 0]], [0.5284, [3, -0.146667, 0], [3, 0.266667, 0]], [0.271478, [3, -0.266667, 0.016695], [3, 0.106667, -0.00667799]], [0.2648, [3, -0.106667, 0.000304767], [3, 0.28, -0.000800014]], [0.264, [3, -0.28, 0], [3, 0.32, 0]], [0.2648, [3, -0.32, 0], [3, 0.28, 0]], [0.264, [3, -0.28, 0], [3, 0.306667, 0]], [0.2648, [3, -0.306667, 0], [3, 0.28, 0]], [0.264, [3, -0.28, 0], [3, 0.32, 0]], [0.2648, [3, -0.32, 0], [3, 0.28, 0]], [0.264, [3, -0.28, 0], [3, 0.4, 0]], [0.596785, [3, -0.4, 0], [3, 0.0666667, 0]], [0.2976, [3, -0.0666667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.72, 1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24])
    keys.append([[0.915841, [3, -0.253333, 0], [3, 0.266667, 0]], [-1.19188, [3, -0.266667, 0], [3, 0.28, 0]], [0.995607, [3, -0.28, 0], [3, 0.32, 0]], [-1.19188, [3, -0.32, 0], [3, 0.28, 0]], [0.995607, [3, -0.28, 0], [3, 0.306667, 0]], [-1.19188, [3, -0.306667, 0], [3, 0.28, 0]], [0.995607, [3, -0.28, 0], [3, 0.32, 0]], [-1.19188, [3, -0.32, 0], [3, 0.28, 0]], [0.995607, [3, -0.28, -0.299664], [3, 0.266667, 0.285395]], [1.281, [3, -0.266667, -0.0368305], [3, 0.106667, 0.0147322]], [1.29573, [3, -0.106667, -0.0113707], [3, 0.28, 0.0298481]], [1.40466, [3, -0.28, 0], [3, 0.32, 0]], [1.29573, [3, -0.32, 0], [3, 0.28, 0]], [1.40466, [3, -0.28, 0], [3, 0.306667, 0]], [1.29573, [3, -0.306667, 0], [3, 0.28, 0]], [1.40466, [3, -0.28, 0], [3, 0.32, 0]], [1.29573, [3, -0.32, 0], [3, 0.28, 0]], [1.40466, [3, -0.28, -0.0242871], [3, 0.4, 0.0346958]], [1.47268, [3, -0.4, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.72, 1.08, 1.52, 1.92, 2.36, 2.84, 3.32, 3.72, 4.16, 4.64, 5.08, 5.48, 5.92, 6.4, 6.88, 7.28, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 15.64, 16.44])
    keys.append([[-0.905123, [3, -0.253333, 0], [3, 0.12, 0]], [-1.30837, [3, -0.12, 0], [3, 0.146667, 0]], [-0.966481, [3, -0.146667, 0], [3, 0.133333, 0]], [-1.23332, [3, -0.133333, 0], [3, 0.146667, 0]], [-0.324005, [3, -0.146667, 0], [3, 0.16, 0]], [-1.23332, [3, -0.16, 0], [3, 0.16, 0]], [-0.966481, [3, -0.16, 0], [3, 0.133333, 0]], [-1.23332, [3, -0.133333, 0], [3, 0.146667, 0]], [-0.324005, [3, -0.146667, 0], [3, 0.16, 0]], [-1.23332, [3, -0.16, 0], [3, 0.146667, 0]], [-0.966481, [3, -0.146667, 0], [3, 0.133333, 0]], [-1.23332, [3, -0.133333, 0], [3, 0.146667, 0]], [-0.324005, [3, -0.146667, 0], [3, 0.16, 0]], [-1.23332, [3, -0.16, 0], [3, 0.16, 0]], [-0.966481, [3, -0.16, 0], [3, 0.133333, 0]], [-1.23332, [3, -0.133333, 0], [3, 0.146667, 0]], [-0.324005, [3, -0.146667, 0], [3, 0.266667, 0]], [-0.397371, [3, -0.266667, 0.0112486], [3, 0.106667, -0.00449944]], [-0.401871, [3, -0.106667, 0], [3, 0.28, 0]], [-0.35585, [3, -0.28, 0], [3, 0.32, 0]], [-0.401871, [3, -0.32, 0], [3, 0.28, 0]], [-0.35585, [3, -0.28, 0], [3, 0.306667, 0]], [-0.401871, [3, -0.306667, 0], [3, 0.28, 0]], [-0.35585, [3, -0.28, 0], [3, 0.32, 0]], [-0.401871, [3, -0.32, 0], [3, 0.28, 0]], [-0.35585, [3, -0.28, -0.0177338], [3, 0.2, 0.012667]], [-0.310669, [3, -0.2, -0.0259024], [3, 0.266667, 0.0345366]], [-0.174533, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.72, 1.52, 2.36, 3.32, 4.16, 5.08, 5.92, 6.88, 7.72, 8.52, 8.84, 9.68, 10.64, 11.48, 12.4, 13.24, 14.2, 15.04, 16.24, 16.44])
    keys.append([[-0.401949, [3, -0.253333, 0], [3, 0.266667, 0]], [0.107338, [3, -0.266667, -0.130452], [3, 0.28, 0.136975]], [0.400331, [3, -0.28, 0], [3, 0.32, 0]], [0.107338, [3, -0.32, 0], [3, 0.28, 0]], [0.400331, [3, -0.28, 0], [3, 0.306667, 0]], [0.107338, [3, -0.306667, 0], [3, 0.28, 0]], [0.400331, [3, -0.28, 0], [3, 0.32, 0]], [0.107338, [3, -0.32, 0], [3, 0.28, 0]], [0.400331, [3, -0.28, 0], [3, 0.266667, 0]], [0.391888, [3, -0.266667, 0], [3, 0.106667, 0]], [0.395814, [3, -0.106667, -0.00261791], [3, 0.28, 0.00687202]], [0.420357, [3, -0.28, 0], [3, 0.32, 0]], [0.395814, [3, -0.32, 0], [3, 0.28, 0]], [0.420357, [3, -0.28, 0], [3, 0.306667, 0]], [0.395814, [3, -0.306667, 0], [3, 0.28, 0]], [0.420357, [3, -0.28, 0], [3, 0.32, 0]], [0.395814, [3, -0.32, 0], [3, 0.28, 0]], [0.420357, [3, -0.28, 0], [3, 0.4, 0]], [0.00501826, [3, -0.4, 0], [3, 0.0666667, 0]], [0.108872, [3, -0.0666667, 0], [3, 0, 0]]])

    try:
      # uncomment the following line and modify the IP if you use this script outside Choregraphe.
      # motion = ALProxy("ALMotion", IP, 9559)
      motion = srv["motion"]
      motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
      print(err)


def bang(srv):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append(
        [0.52, 0.88, 1.4, 1.96, 2.64, 3.16, 3.72, 4.44, 5.08, 5.76, 6.4, 7.12, 7.76, 8.44, 8.8, 9.12, 9.48, 9.8, 10.08,
         10.4, 10.68, 11.08, 11.56, 12])
    keys.append([[-0.214801, [3, -0.186667, 0], [3, 0.12, 0]], [0.217786, [3, -0.12, 0], [3, 0.173333, 0]],
                 [-0.312978, [3, -0.173333, 0], [3, 0.186667, 0]], [0.205514, [3, -0.186667, 0], [3, 0.226667, 0]],
                 [-0.309909, [3, -0.226667, 0], [3, 0.173333, 0]], [0.185572, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [-0.185656, [3, -0.186667, 0], [3, 0.24, 0]], [0.315962, [3, -0.24, 0], [3, 0.213333, 0]],
                 [-0.242414, [3, -0.213333, 0], [3, 0.226667, 0]], [0.21932, [3, -0.226667, 0], [3, 0.213333, 0]],
                 [-0.34826, [3, -0.213333, 0], [3, 0.24, 0]], [0.236194, [3, -0.24, 0], [3, 0.213333, 0]],
                 [-0.320648, [3, -0.213333, 0], [3, 0.226667, 0]], [0.259876, [3, -0.226667, 0], [3, 0.12, 0]],
                 [-0.392432, [3, -0.12, 0], [3, 0.106667, 0]], [0.0838217, [3, -0.106667, 0], [3, 0.12, 0]],
                 [-0.262063, [3, -0.12, 0], [3, 0.106667, 0]], [0.0659949, [3, -0.106667, 0], [3, 0.0933333, 0]],
                 [-0.209192, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.0795251, [3, -0.106667, 0], [3, 0.0933333, 0]],
                 [-0.0930041, [3, -0.0933333, 0], [3, 0.133333, 0]], [0.201243, [3, -0.133333, 0], [3, 0.16, 0]],
                 [0.153801, [3, -0.16, 0.0474422], [3, 0.146667, -0.0434887]],
                 [-0.177985, [3, -0.146667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append(
        [0.52, 0.88, 1.4, 1.96, 2.64, 3.16, 3.72, 4.44, 5.08, 5.76, 6.4, 7.12, 7.76, 8.44, 8.8, 9.12, 9.48, 9.8, 10.08,
         10.4, 10.68, 11.08, 12])
    keys.append([[-0.0859459, [3, -0.186667, 0], [3, 0.12, 0]],
                 [-0.0798099, [3, -0.12, -0.00251018], [3, 0.173333, 0.00362581]],
                 [-0.067538, [3, -0.173333, 0], [3, 0.186667, 0]], [-0.0966839, [3, -0.186667, 0], [3, 0.226667, 0]],
                 [-0.055266, [3, -0.226667, -0.0124595], [3, 0.173333, 0.00952783]],
                 [-0.030722, [3, -0.173333, -0.00541635], [3, 0.186667, 0.00583299]],
                 [-0.021518, [3, -0.186667, 0], [3, 0.24, 0]], [-0.058334, [3, -0.24, 0], [3, 0.213333, 0]],
                 [-0.019984, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [-0.0445279, [3, -0.226667, 0.00632194], [3, 0.213333, -0.00595006]],
                 [-0.0568, [3, -0.213333, 0.00385005], [3, 0.24, -0.0043313]],
                 [-0.0690719, [3, -0.24, 0.00812117], [3, 0.213333, -0.00721882]],
                 [-0.10282, [3, -0.213333, 0.0203295], [3, 0.226667, -0.0216001]],
                 [-0.194861, [3, -0.226667, 0], [3, 0.12, 0]],
                 [-0.165714, [3, -0.12, -0.0211152], [3, 0.106667, 0.0187691]],
                 [-0.075208, [3, -0.106667, -0.0240627], [3, 0.12, 0.0270706]],
                 [-0.012314, [3, -0.12, -0.0132646], [3, 0.106667, 0.0117907]],
                 [-4.19617e-05, [3, -0.106667, 0], [3, 0.0933333, 0]],
                 [-0.032256, [3, -0.0933333, 0.00668142], [3, 0.106667, -0.0076359]],
                 [-0.0429939, [3, -0.106667, 0.00409068], [3, 0.0933333, -0.00357935]],
                 [-0.055266, [3, -0.0933333, 0], [3, 0.133333, 0]], [0.032172, [3, -0.133333, 0], [3, 0.306667, 0]],
                 [-0.00157596, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.84, 1.36, 1.92, 2.6, 3.12, 3.68, 4.4, 5.04, 5.72, 6.36, 7.08, 7.72, 8.4, 9.76, 11.04, 11.56, 11.96])
    keys.append([[-0.449263, [3, -0.293333, 0], [3, 0.173333, 0]], [-0.179827, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [-0.449263, [3, -0.186667, 0], [3, 0.226667, 0]], [-0.179827, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [-0.449263, [3, -0.173333, 0], [3, 0.186667, 0]], [-0.179827, [3, -0.186667, 0], [3, 0.24, 0]],
                 [-0.341753, [3, -0.24, 0], [3, 0.213333, 0]], [-0.179827, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [-0.261119, [3, -0.226667, 0], [3, 0.213333, 0]], [-0.179827, [3, -0.213333, 0], [3, 0.24, 0]],
                 [-0.261119, [3, -0.24, 0], [3, 0.213333, 0]], [-0.179827, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [-0.261119, [3, -0.226667, 0], [3, 0.453333, 0]], [-0.179827, [3, -0.453333, 0], [3, 0.426667, 0]],
                 [-0.449263, [3, -0.426667, 0], [3, 0.173333, 0]],
                 [-0.179827, [3, -0.173333, -0.0761699], [3, 0.133333, 0.0585923]],
                 [-0.044977, [3, -0.133333, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.84, 1.36, 1.92, 2.6, 3.12, 3.68, 4.4, 5.04, 5.72, 6.36, 7.08, 7.72, 8.4, 9.76, 11.04, 11.56, 11.96])
    keys.append([[0, [3, -0.293333, 0], [3, 0.173333, 0]], [0, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [0, [3, -0.186667, 0], [3, 0.226667, 0]], [0, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [0, [3, -0.173333, 0], [3, 0.186667, 0]], [0, [3, -0.186667, 0], [3, 0.24, 0]],
                 [0, [3, -0.24, 0], [3, 0.213333, 0]], [0, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0, [3, -0.226667, 0], [3, 0.213333, 0]], [0, [3, -0.213333, 0], [3, 0.24, 0]],
                 [0, [3, -0.24, 0], [3, 0.213333, 0]], [0, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0, [3, -0.226667, 0], [3, 0.453333, 0]], [0, [3, -0.453333, 0], [3, 0.426667, 0]],
                 [0, [3, -0.426667, 0], [3, 0.173333, 0]], [0, [3, -0.173333, 0], [3, 0.133333, 0]],
                 [-2.89135e-05, [3, -0.133333, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.84, 1.36, 1.92, 2.6, 3.12, 3.68, 4.4, 5.04, 5.72, 6.36, 7.08, 7.72, 8.4, 9.76, 11.04, 11.56, 11.96])
    keys.append([[0.245458, [3, -0.293333, 0], [3, 0.173333, 0]], [0.072264, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [0.245458, [3, -0.186667, 0], [3, 0.226667, 0]], [0.072264, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [0.245458, [3, -0.173333, 0], [3, 0.186667, 0]], [0.072264, [3, -0.186667, 0], [3, 0.24, 0]],
                 [0.21858, [3, -0.24, 0], [3, 0.213333, 0]], [0.072264, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.164825, [3, -0.226667, 0], [3, 0.213333, 0]], [0.072264, [3, -0.213333, 0], [3, 0.24, 0]],
                 [0.164825, [3, -0.24, 0], [3, 0.213333, 0]], [0.072264, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.164825, [3, -0.226667, 0], [3, 0.453333, 0]], [0.072264, [3, -0.453333, 0], [3, 0.426667, 0]],
                 [0.245458, [3, -0.426667, 0], [3, 0.173333, 0]],
                 [0.072264, [3, -0.173333, 0.0483441], [3, 0.133333, -0.0371878]],
                 [-0.0111379, [3, -0.133333, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append(
        [0.76, 1.28, 1.84, 2.52, 3.04, 3.6, 4.32, 4.96, 5.64, 6.28, 7, 7.64, 8.32, 9, 9.68, 10.28, 10.96, 11.88])
    keys.append([[-0.521518, [3, -0.266667, 0], [3, 0.173333, 0]], [-0.519984, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [-0.631966, [3, -0.186667, 0], [3, 0.226667, 0]], [-0.547595, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [-0.555266, [3, -0.173333, 0.0076707], [3, 0.186667, -0.00826076]],
                 [-0.993989, [3, -0.186667, 0], [3, 0.24, 0]], [-0.984366, [3, -0.24, 0], [3, 0.213333, 0]],
                 [-1.37604, [3, -0.213333, 0], [3, 0.226667, 0]], [-0.699462, [3, -0.226667, 0], [3, 0.213333, 0]],
                 [-1.54623, [3, -0.213333, 0], [3, 0.24, 0]], [-0.506179, [3, -0.24, 0], [3, 0.213333, 0]],
                 [-1.54623, [3, -0.213333, 0], [3, 0.226667, 0]], [-1.0216, [3, -0.226667, 0], [3, 0.226667, 0]],
                 [-1.15199, [3, -0.226667, 0.0301686], [3, 0.226667, -0.0301686]],
                 [-1.20261, [3, -0.226667, 0], [3, 0.2, 0]], [-0.937231, [3, -0.2, 0], [3, 0.226667, 0]],
                 [-1.25784, [3, -0.226667, 0], [3, 0.306667, 0]], [-0.590548, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append(
        [0.76, 1.28, 1.84, 2.52, 3.04, 3.6, 4.32, 4.96, 5.64, 6.28, 7, 7.64, 8.32, 9, 9.68, 10.28, 10.96, 11.88])
    keys.append([[-1.54171, [3, -0.266667, 0], [3, 0.173333, 0]],
                 [-1.71505, [3, -0.173333, 0.0403768], [3, 0.186667, -0.0434827]],
                 [-1.79329, [3, -0.186667, 0.0157028], [3, 0.226667, -0.0190676]],
                 [-1.81937, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [-1.66443, [3, -0.173333, -0.154935], [3, 0.186667, 0.166853]],
                 [-0.799361, [3, -0.186667, 0], [3, 0.24, 0]], [-0.86982, [3, -0.24, 0], [3, 0.213333, 0]],
                 [-0.447886, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [-0.589097, [3, -0.226667, 0.141211], [3, 0.213333, -0.132905]],
                 [-1.39752, [3, -0.213333, 0], [3, 0.24, 0]], [-0.490923, [3, -0.24, 0], [3, 0.213333, 0]],
                 [-1.39752, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [-1.16128, [3, -0.226667, -0.0761889], [3, 0.226667, 0.0761889]],
                 [-0.940383, [3, -0.226667, -0.00613486], [3, 0.226667, 0.00613486]],
                 [-0.934249, [3, -0.226667, -0.00613486], [3, 0.2, 0.00541311]],
                 [-0.903567, [3, -0.2, -0.0222911], [3, 0.226667, 0.0252633]],
                 [-0.791585, [3, -0.226667, 0], [3, 0.306667, 0]], [-1.2165, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.76, 1.28, 2.52, 3.6, 4.32, 4.96, 5.64, 6.28, 7, 7.64, 8.32, 9, 9.68, 10.96, 11.88])
    keys.append([[0.230571, [3, -0.266667, 0], [3, 0.173333, 0]], [0.230935, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [0.230935, [3, -0.413333, 0], [3, 0.36, 0]], [0.224389, [3, -0.36, 0], [3, 0.24, 0]],
                 [0.618182, [3, -0.24, 0], [3, 0.213333, 0]], [0.45, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.83, [3, -0.226667, 0], [3, 0.213333, 0]], [0.43, [3, -0.213333, 0], [3, 0.24, 0]],
                 [0.91, [3, -0.24, 0], [3, 0.213333, 0]], [0.51, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.688387, [3, -0.226667, -0.010813], [3, 0.226667, 0.010813]],
                 [0.6992, [3, -0.226667, 0], [3, 0.226667, 0]], [0.6992, [3, -0.226667, 0], [3, 0.426667, 0]],
                 [0.684, [3, -0.426667, 0.0152], [3, 0.306667, -0.010925]], [0.232025, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append(
        [0.76, 1.28, 1.84, 2.52, 3.04, 3.6, 4.32, 4.96, 5.64, 6.28, 7, 7.64, 8.32, 9, 9.68, 10.28, 10.96, 11.88])
    keys.append([[1.6981, [3, -0.266667, 0], [3, 0.173333, 0]],
                 [1.69043, [3, -0.173333, 0.00766897], [3, 0.186667, -0.00825889]],
                 [1.57998, [3, -0.186667, 0], [3, 0.226667, 0]], [1.67509, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [1.60759, [3, -0.173333, 0.0674971], [3, 0.186667, -0.0726892]],
                 [0.879646, [3, -0.186667, 0.305199], [3, 0.24, -0.392398]],
                 [-0.485202, [3, -0.24, 0.355547], [3, 0.213333, -0.316041]],
                 [-1.13512, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [-0.719487, [3, -0.226667, -0.124317], [3, 0.213333, 0.117004]],
                 [-0.411154, [3, -0.213333, 0], [3, 0.24, 0]], [-0.955723, [3, -0.24, 0], [3, 0.213333, 0]],
                 [-0.411154, [3, -0.213333, -0.287881], [3, 0.226667, 0.305874]],
                 [0.825541, [3, -0.226667, -0.291716], [3, 0.226667, 0.291716]],
                 [1.33914, [3, -0.226667, -0.099709], [3, 0.226667, 0.099709]],
                 [1.43885, [3, -0.226667, -0.0320541], [3, 0.2, 0.0282831]], [1.52015, [3, -0.2, 0], [3, 0.226667, 0]],
                 [1.37289, [3, -0.226667, 0], [3, 0.306667, 0]], [1.59685, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append(
        [0.76, 1.28, 1.84, 2.52, 3.04, 3.6, 4.32, 4.96, 5.64, 6.28, 7, 7.64, 8.32, 9, 9.68, 10.28, 10.96, 11.88])
    keys.append([[0.171766, [3, -0.266667, 0], [3, 0.173333, 0]], [0.174835, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [0.11961, [3, -0.186667, 0], [3, 0.226667, 0]], [0.122678, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [0.11194, [3, -0.173333, 0], [3, 0.186667, 0]], [0.457276, [3, -0.186667, 0], [3, 0.24, 0]],
                 [0.26529, [3, -0.24, 0], [3, 0.213333, 0]], [1.01555, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.423342, [3, -0.226667, 0], [3, 0.213333, 0]], [1.12438, [3, -0.213333, 0], [3, 0.24, 0]],
                 [0.193243, [3, -0.24, 0], [3, 0.213333, 0]], [1.12438, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.368118, [3, -0.226667, 0], [3, 0.226667, 0]],
                 [0.412605, [3, -0.226667, -0.00306829], [3, 0.226667, 0.00306829]],
                 [0.415673, [3, -0.226667, 0], [3, 0.2, 0]], [0.363515, [3, -0.2, 0], [3, 0.226667, 0]],
                 [0.412605, [3, -0.226667, 0], [3, 0.306667, 0]], [0.174835, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.76, 1.28, 2.52, 3.6, 4.32, 4.96, 5.64, 7, 8.32, 9, 9.68, 10.96, 11.88])
    keys.append([[0.095066, [3, -0.266667, 0], [3, 0.173333, 0]], [0.0966, [3, -0.173333, 0], [3, 0.413333, 0]],
                 [0.095066, [3, -0.413333, 0], [3, 0.36, 0]], [0.221657, [3, -0.36, -0.0961785], [3, 0.24, 0.064119]],
                 [0.575959, [3, -0.24, 0], [3, 0.213333, 0]], [0.138102, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.314159, [3, -0.226667, -0.00243561], [3, 0.453333, 0.00487122]],
                 [0.31903, [3, -0.453333, 0], [3, 0.44, 0]],
                 [0.282215, [3, -0.44, 0.036816], [3, 0.226667, -0.0189658]],
                 [-0.276162, [3, -0.226667, 0], [3, 0.226667, 0]],
                 [-0.188724, [3, -0.226667, -0.0368995], [3, 0.426667, 0.0694578]],
                 [0.0429101, [3, -0.426667, -0.0592032], [3, 0.306667, 0.0425523]],
                 [0.116542, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append(
        [0.8, 1.32, 1.88, 2.56, 3.08, 3.64, 4.36, 5, 5.68, 6.32, 7.04, 7.68, 8.36, 9.04, 9.72, 10.32, 11, 11.92])
    keys.append([[0.994073, [3, -0.28, 0], [3, 0.173333, 0]], [1.51103, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [0.879025, [3, -0.186667, 0], [3, 0.226667, 0]], [1.56207, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [1.04009, [3, -0.173333, 0], [3, 0.186667, 0]], [1.56207, [3, -0.186667, 0], [3, 0.24, 0]],
                 [0.579894, [3, -0.24, 0], [3, 0.213333, 0]], [1.37604, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.607505, [3, -0.226667, 0], [3, 0.213333, 0]], [1.45734, [3, -0.213333, 0], [3, 0.24, 0]],
                 [0.605971, [3, -0.24, 0], [3, 0.213333, 0]], [1.54938, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.676537, [3, -0.226667, 0], [3, 0.226667, 0]],
                 [0.89283, [3, -0.226667, -0.0542012], [3, 0.226667, 0.0542012]],
                 [1.00174, [3, -0.226667, 0], [3, 0.2, 0]], [0.797722, [3, -0.2, 0], [3, 0.226667, 0]],
                 [1.1352, [3, -0.226667, 0], [3, 0.306667, 0]], [0.440299, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append(
        [0.44, 0.8, 1.32, 1.88, 2.56, 3.08, 3.64, 4.36, 5, 5.68, 6.32, 7.04, 7.68, 8.36, 9.04, 9.72, 10.32, 11, 11.92])
    keys.append([[0.682424, [3, -0.16, 0], [3, 0.12, 0]], [0.179436, [3, -0.12, 0], [3, 0.173333, 0]],
                 [0.547595, [3, -0.173333, 0], [3, 0.186667, 0]], [0.187106, [3, -0.186667, 0], [3, 0.226667, 0]],
                 [0.5568, [3, -0.226667, 0], [3, 0.173333, 0]], [0.323633, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [0.546063, [3, -0.186667, 0], [3, 0.24, 0]], [0.20398, [3, -0.24, 0], [3, 0.213333, 0]],
                 [0.447886, [3, -0.213333, 0], [3, 0.226667, 0]], [0.262272, [3, -0.226667, 0], [3, 0.213333, 0]],
                 [0.671851, [3, -0.213333, 0], [3, 0.24, 0]], [0.357381, [3, -0.24, 0], [3, 0.213333, 0]],
                 [1.62907, [3, -0.213333, 0], [3, 0.226667, 0]], [0.093532, [3, -0.226667, 0], [3, 0.226667, 0]],
                 [0.450955, [3, -0.226667, -0.0153397], [3, 0.226667, 0.0153397]],
                 [0.466294, [3, -0.226667, -0.0111373], [3, 0.2, 0.00982702]],
                 [0.513848, [3, -0.2, -0.0270845], [3, 0.226667, 0.0306958]],
                 [0.639635, [3, -0.226667, -0.0934463], [3, 0.306667, 0.126427]],
                 [1.17347, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append(
        [0.44, 0.8, 1.32, 1.88, 2.56, 3.08, 3.64, 4.36, 5, 5.68, 6.32, 7.04, 7.68, 8.36, 9.04, 9.72, 11, 11.92])
    keys.append([[0.57, [3, -0.16, 0], [3, 0.12, 0]], [0.745455, [3, -0.12, 0], [3, 0.173333, 0]],
                 [0.26, [3, -0.173333, 0], [3, 0.186667, 0]], [0.82, [3, -0.186667, 0], [3, 0.226667, 0]],
                 [0.514873, [3, -0.226667, 0], [3, 0.173333, 0]], [0.78, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [0.3, [3, -0.186667, 0], [3, 0.24, 0]], [0.81, [3, -0.24, 0], [3, 0.213333, 0]],
                 [0.45, [3, -0.213333, 0], [3, 0.226667, 0]], [0.83, [3, -0.226667, 0], [3, 0.213333, 0]],
                 [0.43, [3, -0.213333, 0], [3, 0.24, 0]], [0.91, [3, -0.24, 0], [3, 0.213333, 0]],
                 [0.51, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [0.514873, [3, -0.226667, -0.00487304], [3, 0.226667, 0.00487304]],
                 [0.6944, [3, -0.226667, -0.0473212], [3, 0.226667, 0.0473212]],
                 [0.7988, [3, -0.226667, 0], [3, 0.426667, 0]],
                 [0.5424, [3, -0.426667, 0.0753635], [3, 0.306667, -0.0541675]],
                 [0.410207, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append(
        [0.8, 1.32, 1.88, 2.56, 3.08, 3.64, 4.36, 5, 5.68, 6.32, 7.04, 7.68, 8.36, 9.04, 9.72, 10.32, 11, 11.92])
    keys.append([[-0.808375, [3, -0.28, 0], [3, 0.173333, 0]], [-1.13052, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [-0.777696, [3, -0.186667, 0], [3, 0.226667, 0]],
                 [-0.780764, [3, -0.226667, 0.00306829], [3, 0.173333, -0.00234634]],
                 [-0.84826, [3, -0.173333, 0.00997193], [3, 0.186667, -0.010739]],
                 [-0.858999, [3, -0.186667, 0.010739], [3, 0.24, -0.0138073]],
                 [-1.12898, [3, -0.24, 0.00690366], [3, 0.213333, -0.00613659]],
                 [-1.13512, [3, -0.213333, 0], [3, 0.226667, 0]], [-0.880473, [3, -0.226667, 0], [3, 0.213333, 0]],
                 [-1.01086, [3, -0.213333, 0], [3, 0.24, 0]],
                 [-0.970981, [3, -0.24, -0.0398826], [3, 0.213333, 0.0354512]],
                 [0.158044, [3, -0.213333, -0.153039], [3, 0.226667, 0.162604]],
                 [0.320648, [3, -0.226667, -0.148798], [3, 0.226667, 0.148798]],
                 [1.05083, [3, -0.226667, -0.111982], [3, 0.226667, 0.111982]],
                 [1.16281, [3, -0.226667, -0.0315111], [3, 0.2, 0.0278039]],
                 [1.22878, [3, -0.2, -0.00812037], [3, 0.226667, 0.00920309]],
                 [1.23798, [3, -0.226667, -0.00920309], [3, 0.306667, 0.0124512]],
                 [1.48342, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append(
        [0.8, 1.32, 1.88, 2.56, 3.08, 3.64, 4.36, 5, 5.68, 6.32, 7.04, 7.68, 8.36, 9.04, 9.72, 10.32, 11, 11.92])
    keys.append([[-0.602903, [3, -0.28, 0], [3, 0.173333, 0]], [-1.28553, [3, -0.173333, 0], [3, 0.186667, 0]],
                 [-0.546147, [3, -0.186667, 0], [3, 0.226667, 0]], [-1.30548, [3, -0.226667, 0], [3, 0.173333, 0]],
                 [-0.527739, [3, -0.173333, 0], [3, 0.186667, 0]], [-1.40365, [3, -0.186667, 0], [3, 0.24, 0]],
                 [-0.230143, [3, -0.24, 0], [3, 0.213333, 0]], [-1.01555, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [-0.38661, [3, -0.226667, 0], [3, 0.213333, 0]], [-1.34843, [3, -0.213333, 0], [3, 0.24, 0]],
                 [-0.326783, [3, -0.24, 0], [3, 0.213333, 0]], [-0.900499, [3, -0.213333, 0], [3, 0.226667, 0]],
                 [-0.205598, [3, -0.226667, 0], [3, 0.226667, 0]],
                 [-0.362067, [3, -0.226667, 0.0350264], [3, 0.226667, -0.0350264]],
                 [-0.415757, [3, -0.226667, 0], [3, 0.2, 0]], [-0.351328, [3, -0.2, 0], [3, 0.226667, 0]],
                 [-0.37127, [3, -0.226667, 0], [3, 0.306667, 0]], [-0.122762, [3, -0.306667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.44, 0.8, 1.32, 2.56, 3.64, 5, 5.68, 7.04, 8.36, 9.04, 9.72, 11, 11.92])
    keys.append(
        [[-0.18675, [3, -0.16, 0], [3, 0.12, 0]], [-0.122173, [3, -0.12, -0.00171627], [3, 0.173333, 0.00247906]],
         [-0.119694, [3, -0.173333, 0], [3, 0.413333, 0]], [-0.119694, [3, -0.413333, 0], [3, 0.36, 0]],
         [-0.130432, [3, -0.36, 0.00271593], [3, 0.453333, -0.00342006]],
         [-0.138102, [3, -0.453333, 0.00204533], [3, 0.226667, -0.00102267]],
         [-0.139636, [3, -0.226667, 0.000852225], [3, 0.453333, -0.00170445]],
         [-0.145772, [3, -0.453333, 0.00613606], [3, 0.44, -0.00595558]], [-0.22554, [3, -0.44, 0], [3, 0.226667, 0]],
         [0.662646, [3, -0.226667, 0], [3, 0.226667, 0]],
         [0.529187, [3, -0.226667, 0.0665255], [3, 0.426667, -0.125224]],
         [0.0873961, [3, -0.426667, 0], [3, 0.306667, 0]], [0.161028, [3, -0.306667, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        # motion = ALProxy("ALMotion", IP, 9559)
        motion = srv["motion"]
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err
